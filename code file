

Weekly Duplicate eRx.sql code:
--Snowflake Source


CREATE OR REPLACE TEMPORARY TABLE SCRIPTS AS (
    SELECT DISTINCT SCRIPT.PPI_MESSAGE_ID
        , SCRIPT.STORE_NBR
        , SCRIPT.RX_NBR
        , SCRIPT.WRITTEN_TS
        , SCRIPT.RX_TYP AS RX_TYPE
        , SCRIPT.RX_STATE
        , SCRIPT.RXC_PATIENT_ID
    FROM CORE_RX.CURATED_SCRIPT.RXC_PRESCRIPTION_RT AS SCRIPT
    LEFT JOIN DL_RX_OPERATION.RX_OPS_SANDBOX.DUPLICATE_PPI_HIST AS HIST
        ON SCRIPT.PPI_MESSAGE_ID::BIGINT=HIST.PPI_MESSAGE_ID
    WHERE SCRIPT.RX_STATE NOT IN (2,3,5,7)
        AND SCRIPT.IS_DIRTY='N'
        AND SCRIPT.LAST_UPDATE_TS::DATE>=CURRENT_DATE-7
        AND SCRIPT.WRITTEN_TS::DATE>=CURRENT_DATE-7
        AND SCRIPT.PPI_MESSAGE_ID IS NOT NULL
        AND SCRIPT.RX_ORIGIN_CD = '3'
        AND SCRIPT.CREATE_BY NOT IN ('System', 'QRCadenceBatch')
        AND HIST.PPI_MESSAGE_ID IS NULL
    QUALIFY COUNT(DISTINCT RX_NBR) OVER (PARTITION BY SCRIPT.PPI_MESSAGE_ID, STORE_NBR, SCRIPT.WRITTEN_TS::DATE) > 1
    ORDER BY PPI_MESSAGE_ID, WRITTEN_TS
);

CREATE OR REPLACE TEMPORARY TABLE FILLS AS (
    SELECT S.*
    ,SF.FILL_NBR
    ,SF.NDC
    ,SF.DRUG_SCHEDULE_NM AS DRUG_SCHEDULE
    ,SF.RXC_PRESCRIPTION_ID
    ,SF.FILL_STATUS_CD
    ,ST.RX_FILL_STATUS_DSC
    ,SF.CREATE_BY_NM
FROM SCRIPTS AS S
LEFT JOIN CORE_RX.CURATED_SCRIPT.RXC_PRESCRIPTION_FILL_RT AS SF
    ON S.STORE_NBR=SF.STORE_NBR
        AND S.RX_NBR=SF.RX_NBR
LEFT JOIN CORE_RX.CURATED_SCRIPT.DIM_RX_FILL_STATUS AS ST
    ON SF.FILL_STATUS_CD=ST.RX_FILL_STATUS_CD
WHERE SF.FILL_STATE_CD <> '3'
    AND SF.FILL_STATUS_CD <> '0'
    AND SF.DIRTY_IND='N'
    AND SF.DRUG_SCHEDULE_NM<>'OTC'
QUALIFY ROW_NUMBER() OVER (PARTITION BY SF.STORE_NBR, SF.RX_NBR, SF.FILL_NBR ORDER BY SF.KAFKA_LOAD_TS DESC) = 1
);

INSERT INTO DL_RX_OPERATION.RX_OPS_SANDBOX.DUPLICATE_PPI_HIST
SELECT DISTINCT PPI_MESSAGE_ID
FROM FILLS;

--USED A CLEANED UP RT TABLE SO COULD ADD THIS TO THE ORIGINAL JOIN
WITH STAGED_DATA AS (
SELECT SF.*
    ,PTNT.FIRST_NM
    ,PTNT.LAST_NM
    ,PTNT.BIRTH_DT
    ,STR.STATE_CD AS STATE_NM
    ,PTNT.MOBILE_PHONE_NBR
    ,DRG.LABEL_NM
FROM FILLS AS SF
INNER JOIN CORE_RX.CURATED_PATIENT.PATIENT AS PTNT
    ON SF.RXC_PATIENT_ID=PTNT.RXC_PATIENT_ID
INNER JOIN CORE_RX.CURATED_PRODUCT.DRUG AS DRG
    ON SF.NDC=DRG.NDC
LEFT JOIN CORE_RX.CURATED_LOCATION.STORE AS STR
    ON SF.STORE_NBR=STR.STORE_NBR
QUALIFY COUNT(DISTINCT SF.RX_NBR) OVER (PARTITION BY SF.PPI_MESSAGE_ID, SF.STORE_NBR, SF.WRITTEN_TS::DATE) > 1)

SELECT PPI_MESSAGE_ID,
STORE_NBR,
STATE_NM,
RX_NBR,
FIRST_NM,
LAST_NM,
BIRTH_DT,
MOBILE_PHONE_NBR,
LABEL_NM,
WRITTEN_TS,
RX_STATE,
DRUG_SCHEDULE,
RXC_PRESCRIPTION_ID,
FILL_STATUS_CD,
RX_FILL_STATUS_DSC,
CREATE_BY_NM
FROM STAGED_DATA;
