CREATE OR REPLACE TASK DL_RX_OPERATION.RX_OPS_SANDBOX.LOAD_PNP_SFS_RETURNS
WAREHOUSE = WH_RX_QUERY_RXANALYTICS_01
SCHEDULE = 'USING CRON 0 8 * * 1 America/New_York'
AS CALL DL_RX_OPERATION.RX_OPS_SANDBOX.PNP_SFS_RETURNS_PROC();

alter task DL_RX_OPERATION.RX_OPS_SANDBOX.REFRESH_MONDAY_EMAIL resume;

CREATE OR REPLACE PROCEDURE DL_RX_OPERATION.RX_OPS_SANDBOX.PNP_SFS_RETURNS_PROC()
RETURNS STRING
LANGUAGE SQL
EXECUTE AS CALLER
AS
$$
BEGIN
CREATE OR REPLACE TEMPORARY TABLE DELIVERY_RX_PnP AS (
SELECT 
year(date(a.create_ts)) as Year
, week(date(a.create_ts)) as Week
, a.STORE_NBR
, destination_address_street_1
, destination_address_street_2
, destination_address_city
, destination_address_state
, A.OMS_ORDER_NBR
, a.order_id
, tracking_nbr
, MAX(CASE WHEN C.ORDER_STATUS_CD = 5 THEN C.REC_EFF_TS ELSE NULL END) AS Return_Completed
, MAX(CASE WHEN C.ORDER_STATUS_CD = 18 THEN C.REC_EFF_TS ELSE NULL END) AS Return_yet_to_be_completed
, ITEM_PRICE_AMT
,CASE
WHEN item_status = 5 AND line_item_cancel_reason ILIKE '%RETURN%' THEN 'Returned Sku'
WHEN item_status = 5 AND NOT line_item_cancel_reason ILIKE '%RETURN%' THEN 'Missing Sku'
END AS "Item Status"
FROM CORE_FSSC.CURATED_ORDERS.ORDER_DELIVERY AS A
JOIN CORE_FSSC.CURATED_ORDERS.ORDER_DELIVERY_ITEM AS B
ON A.ORDER_ID = B.ORDER_ID
AND A.STORE_NBR = B.STORE_NBR
JOIN (SELECT 
  ORDER_ID 
, STORE_NBR 
, ORDER_STATUS_CD 
, REC_EFF_TS 
--HISTORY TABLE DOES NOT HAVE CURRENT RECORD IN IT
FROM CORE_FSSC.CURATED_ORDERS.ORDER_DELIVERY_HISTORY
UNION 
SELECT 
  ORDER_ID 
, STORE_NBR 
, ORDER_STATUS_CD 
, REC_EFF_TS 
FROM CORE_FSSC.CURATED_ORDERS.ORDER_DELIVERY) AS C
ON A.ORDER_ID = C.ORDER_ID 
AND A.STORE_NBR = C.STORE_NBR 
where A.REC_EFF_TS >= current_date - 14
and  order_type=13 
and delivery_sla_cd='SFS_Mobile'
GROUP BY ALL);

Create OR REPLACE TABLE PNP_SFS_RETURNS AS
select 
Year
, Week
, STORE_NBR
, destination_address_street_1
, destination_address_street_2
, destination_address_city
, destination_address_state
, OMS_ORDER_NBR
, order_id
, tracking_nbr
, Return_Completed
, Return_yet_to_be_completed
, ITEM_PRICE_AMT
from DELIVERY_RX_PnP
where (Return_Completed is not null 
or Return_yet_to_be_completed is not null);

END;
$$;
