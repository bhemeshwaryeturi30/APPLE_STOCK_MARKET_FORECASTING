CREATE OR REPLACE TASK DL_RX_OPERATION.RX_OPS_SANDBOX.DT_UNDERUTILIZATION
  WAREHOUSE = WH_RX_QUERY_RXANALYTICS_01
  SCHEDULE = 'USING CRON 15 15 * * 1 America/New_York' -- Every Monday at 3:15 PM
  AS CALL DL_RX_OPERATION.RX_OPS_SANDBOX.DT_UNDERUTILIZATION_PROC();

  ALTER TASK DL_RX_OPERATION.RX_OPS_SANDBOX.DT_UNDERUTILIZATION RESUME;

  CREATE OR REPLACE PROCEDURE DL_RX_OPERATION.RX_OPS_SANDBOX.DT_UNDERUTILIZATION_PROC()
  RETURNS STRING
  LANGUAGE SQL
  EXECUTE AS CALLER
  AS
  $$
  BEGIN


CREATE OR REPLACE TEMPORARY TABLE DATE_RANGE AS (
  SELECT 
    DATEADD(DAY, -((DATE_PART(DOW, CURRENT_DATE) + 1) + 6), CURRENT_DATE) AS START_DT, -- Previous Sunday
    DATEADD(DAY, -((DATE_PART(DOW, CURRENT_DATE) + 1)), CURRENT_DATE) AS END_DT        -- Previous Saturday
);

-- Step 1: Historical Calendar
CREATE OR REPLACE TEMPORARY TABLE CAL_HIST AS (
  SELECT DATE_DT
  FROM CORE_FSSC.CURATED_CALENDAR.DAY, DATE_RANGE
  WHERE DATE_DT BETWEEN DATEADD(MONTH, -3, START_DT) AND DATEADD(DAY, -1, START_DT)
);

-- Step 2: Historical Transactions
CREATE OR REPLACE TEMPORARY TABLE TXN_HIST AS (
  SELECT 
    TRANSACTION_ID, 
    TRANSACTION_START_TS,
    STORE_NBR,
    LOCATION_CD
  FROM SEM_RX.COMMON_RX.POS_TS_ALL_TRANSACTION_DETAIL, DATE_RANGE
  WHERE event_status_ind = 'completed'
    AND total_transaction_second_cnt BETWEEN 5 AND 600
    AND script_sold_cnt > 0
    AND LOCATION_CD IN ('INSTORE','DRIVE THRU')
    AND store_nbr < 20000
    AND store_nbr NOT BETWEEN 16000 AND 17999
    AND CAST(TRANSACTION_START_TS AS DATE) BETWEEN DATEADD(MONTH, -3, START_DT) AND DATEADD(DAY, -1, START_DT)
);

-- Step 3: Store Info
CREATE OR REPLACE TEMPORARY TABLE STORE AS (
  SELECT
    STORE_NBR,
    rx_area_nbr, 
    state_cd,
    RX_REGION_NBR,
    RX_DISTRICT_NBR,
    RX_DISTRICT_MANAGER_EMAIL,
    RX_DISTRICT_MANAGER_FIRST_NM,
    RX_DISTRICT_MANAGER_LAST_NM
  FROM CORE_RX.CURATED_LOCATION.STORE
  WHERE DRIVE_THROUGH_IND = 'Y'
    AND store_close_dt IS NULL
);

-- Step 4: Historical DT Utilization per Store per Day
CREATE OR REPLACE TEMPORARY TABLE HIST_UTIL AS (
  SELECT
    ST.STORE_NBR,
    CAST(TXN.TRANSACTION_START_TS AS DATE) AS DATE_DT,
    COUNT(DISTINCT CASE WHEN TXN.LOCATION_CD = 'DRIVE THRU' THEN TXN.TRANSACTION_ID END) AS DT_TXN_COUNT,
    COUNT(DISTINCT TXN.TRANSACTION_ID) AS TXN_COUNT,
    DIV0(COUNT(DISTINCT CASE WHEN TXN.LOCATION_CD = 'DRIVE THRU' THEN TXN.TRANSACTION_ID END), 
         COUNT(DISTINCT TXN.TRANSACTION_ID)) AS DT_UTILIZATION
  FROM STORE ST
  LEFT JOIN TXN_HIST TXN ON ST.STORE_NBR = TXN.STORE_NBR
  GROUP BY 1, 2
);

-- Step 5: Mean and Stddev of DT Utilization per Store
CREATE OR REPLACE TEMPORARY TABLE HIST_STATS AS (
  SELECT
    STORE_NBR,
    AVG(DT_UTILIZATION) AS MEAN_UTIL,
    STDDEV(DT_UTILIZATION) AS STDDEV_UTIL
  FROM HIST_UTIL
  GROUP BY STORE_NBR
);

-- Step 6: Current Week Calendar
CREATE OR REPLACE TEMPORARY TABLE CAL AS (
  SELECT DATE_DT
  FROM CORE_FSSC.CURATED_CALENDAR.DAY, DATE_RANGE
  WHERE DATE_DT BETWEEN START_DT AND END_DT
);

-- Step 7: Current Week Transactions
CREATE OR REPLACE TEMPORARY TABLE TXN1 AS (
  SELECT 
    TRANSACTION_ID, 
    TRANSACTION_START_TS,
    STORE_NBR,
    LOCATION_CD
  FROM SEM_RX.COMMON_RX.POS_TS_ALL_TRANSACTION_DETAIL, DATE_RANGE
  WHERE event_status_ind = 'completed'
    AND total_transaction_second_cnt BETWEEN 5 AND 600
    AND script_sold_cnt > 0
    AND LOCATION_CD IN ('INSTORE','DRIVE THRU')
    AND store_nbr < 20000
    AND store_nbr NOT BETWEEN 16000 AND 17999
    AND CAST(TRANSACTION_START_TS AS DATE) BETWEEN START_DT AND END_DT
);

-- Step 8: Final Output with Filtering
CREATE OR REPLACE TABLE DL_RX_OPERATION.RX_OPS_SANDBOX.DT_UNDERUTILIZATION_REPORT AS ( SELECT *
FROM (
  SELECT DISTINCT
    DAY_DT.DATE_DT,
    ST.STORE_NBR,
    state_cd,
    rx_area_nbr,
    rx_region_nbr,
    rx_district_nbr,
    RX_DISTRICT_MANAGER_EMAIL,
    RX_DISTRICT_MANAGER_FIRST_NM,
    RX_DISTRICT_MANAGER_LAST_NM,
    COUNT(DISTINCT CASE WHEN TXN.LOCATION_CD = 'INSTORE' THEN TXN.TRANSACTION_ID END) AS IS_TXN_COUNT,
    COUNT(DISTINCT CASE WHEN TXN.LOCATION_CD = 'DRIVE THRU' THEN TXN.TRANSACTION_ID END) AS DT_TXN_COUNT,
    COUNT(DISTINCT TXN.TRANSACTION_ID) AS TXN_COUNT,
    DIV0(COUNT(DISTINCT CASE WHEN TXN.LOCATION_CD = 'DRIVE THRU' THEN TXN.TRANSACTION_ID END), 
         COUNT(DISTINCT TXN.TRANSACTION_ID)) AS DT_UTILIZATION,
    HS.MEAN_UTIL,
    HS.STDDEV_UTIL
  FROM STORE ST
  LEFT JOIN TXN1 TXN ON ST.STORE_NBR = TXN.STORE_NBR
  RIGHT JOIN CAL DAY_DT ON CAST(TXN.TRANSACTION_START_TS AS DATE) = DAY_DT.DATE_DT
  LEFT JOIN HIST_STATS HS ON ST.STORE_NBR = HS.STORE_NBR
  GROUP BY 1,2,3,4,5,6,7,8,9, HS.MEAN_UTIL, HS.STDDEV_UTIL
) RUN1
WHERE DT_UTILIZATION = 0
   OR DT_UTILIZATION < (MEAN_UTIL - 6 * STDDEV_UTIL)
   OR DT_UTILIZATION < 0.05
   --OR STDDEV_UTIL >= 0.10-- Can update to any standard deviation value (update the value currently set at 6)
);

END;
$$;
