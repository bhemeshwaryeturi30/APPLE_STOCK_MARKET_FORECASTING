/* 
    v6.4.1 DUR Module Dashboard
    -Replace RXCOE_PPA.SEM_DIM_ALL_STORE with IDW_COMMON.SEM_DIM_ALL_STORE
*/
/* Create dictionary of PRSCRT_FILL_ID (from Script Fill) and last RXC_PRSCRT_FILL_ID w/WaVe activity from EMP_WF, in order to get latest iteration of DUR */
--DROP TABLE VS_DUR_RX_LINK;
CREATE VOLATILE TABLE VS_DUR_RX_LINK
AS
  (
    SELECT DISTINCT
       base.PRSCRT_FILL_ID
      ,base.RXC_PRSCRT_FILL_ID
      ,base.FILL_DATE
    FROM
    (  
      SELECT DISTINCT
         fill.PRSCRT_FILL_ID
        ,wf.RXC_PRSCRT_FILL_ID
		    ,fill.FILL_DATE
        ,wf.ACTIVITY_DT
        ,RANK() OVER (PARTITION BY wf.PRSCRT_FILL_ID ORDER BY wf.ACTIVITY_DT DESC) AS Ranking
      FROM
        IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_STORE AS store
            ON fill.STORE_NBR = store.STORE_NBR
            AND store.AREA_NBR in (1,2,3,4,5,7,8,9,12) and CLOS_DT IS NULL
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_WC_RX_FILL_EMP_WF AS wf
            ON fill.PRSCRT_FILL_ID = wf.PRSCRT_FILL_ID
            AND wf.ACTIVITY_ID = 109 --Warning Verification
				LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
          ON fill.FILL_DATE = cal.DAY_DT
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal2
            ON cal2.DAY_DT = CURRENT_DATE
      WHERE
          fill.FILL_DATE >= ADD_MONTHS(TRUNC(CURRENT_DATE, 'WW')-1, -12) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
      		AND cal.FISCAL_WEEK_START_DT < cal2.FISCAL_WEEK_START_DT
          AND fill.RX_FILL_STATUS_CODE_ID IN (6,7,9)
    ) AS base
  WHERE
    base.Ranking = 1
  ) WITH DATA PRIMARY INDEX (RXC_PRSCRT_FILL_ID)
  ON COMMIT PRESERVE ROWS;

/* Compile alerts from remaining modules and customize module */    
--DROP TABLE ALERTS_BY_MOD;
CREATE MULTISET VOLATILE TABLE ALERTS_BY_MOD
AS
    (
        SELECT DISTINCT
             dur.PRSCRT_FILL_ID
            ,dur.STORE_NBR
            ,ld.FILL_DATE
            ,dur.RXC_PRSCRT_FILL_ID
            ,dur.DRUG_ID
            ,dur.DUR_CONFLICT_NBR
            ,CASE WHEN dur.DUR_CONFLICT_CTGY_ID = 18 THEN 1 --'Drug Allergy'
                         WHEN dur.DUR_CONFLICT_CODE_ID = 3 THEN 4 --'Dosing'
                         WHEN ldmsg.DUR_MESG IS NOT NULL THEN ldmsg.DUR_CONFLICT_CTGY_ID
                          ELSE dur.DUR_CONFLICT_CTGY_ID
             END AS DUR_CONFLICT_CTGY_ID
            ,dur.DUR_CONFLICT_CODE_ID
            ,CASE WHEN dur.DUR_EXCEPT_TYP_ID = 2 THEN 'SS'
                         WHEN dur.DUR_EXCEPT_TYP_ID = 1 AND dur.ALRT_TYP_CD = 'MI' THEN 'MI'
                         ELSE 'HS'
              END AS Exception_Type
            ,dur.DUR_INTERVENTION_ID
            ,dur.PRSCBR_ID
            ,dur.RXC_PTNT_ID
            ,dur.DUR_SEVERITY_LEVEL_ID
            ,dur.DUR_CNFLT_SUB_TYP_ID
            ,CASE WHEN dur.ALRT_SUPPRESSED_IND = 'Y' OR dur.PHMCT_DSPLY_CD = 2 THEN 'Y' ELSE 'N' END AS Alert_Suppressed
        FROM
            VS_DUR_RX_LINK AS ld
            INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_PROCESS AS dur
                ON ld.RXC_PRSCRT_FILL_ID = dur.RXC_PRSCRT_FILL_ID
                AND dur.FINAL_ITER_IND = 1
                AND (
                        (dur.DUR_EXCEPT_TYP_ID = 1 AND dur.DUR_INTERVENTION_ID <> -9999)
                        OR
                        dur.DUR_EXCEPT_TYP_ID = 2
                    )
				AND (dur.WAVE_BYPS_IND <> 'Y' OR dur.WAVE_BYPS_IND IS NULL) --No WaVe bypass
                AND dur.DUR_ACTIVITY_DATE >= ADD_MONTHS(ld.FILL_DATE, -12) --Added to filter out 7 year old DUR activity that was found on a script
            LEFT OUTER JOIN RXCOE_PPA.LD_DUR_NO_DATA_MESG AS ldmsg
                ON dur.DUR_CONFLICT_CODE_ID = 38
                AND dur.DUR_MESG = ldmsg.DUR_MESG
    ) WITH DATA PRIMARY INDEX (PRSCRT_FILL_ID)
    ON COMMIT PRESERVE ROWS;
    
/* Compile unique Dup Therapy alerts */
--DROP TABLE DISTINCT_DUP_ALERTS;
CREATE VOLATILE TABLE DISTINCT_DUP_ALERTS
AS
    (
        SELECT
             abm.PRSCRT_FILL_ID
            ,abm.STORE_NBR
            ,abm.FILL_DATE
            ,abm.DRUG_ID
            ,durcat.DUR_CONFLICT_CTGY_DSC AS Conflict_Category
            ,durcode.DUR_CONFLICT_CODE_DSC AS Conflict_Code
            ,dursub.DUR_CNFLT_SUB_TYP_DSC AS Conflict_Sub_Type
            ,abm.Exception_Type
            ,abm.Alert_Suppressed
            ,abm.PRSCBR_ID
            ,dup.RXC_PRSCRT_FILL_ID AS CNFLT_RXC_FILL_ID      
            ,dup.IS_RXFILL                     
            ,dup.DAY_SPLY_QTY                  
            ,CAST(dup.LAST_FILL_DT AS DATE) AS RX_LAST_FILL_DATE
            ,dup.LAST_FILL_DT
            ,dup.WRTN_DT                       
            ,dup.IS_CMPND                      
            ,dup.PRSCBR_FULL_NM                
            ,dup.PHONE_NBR                     
            ,dup.ALLWNC                        
            ,dup.DSC                           
            ,dup.CLS_ID                        
            ,dup.DRUG_NM                       
            ,dup.NDC_NBR                       
            ,dup.INTND_DAY_SPLY_QTY            
            ,dup.RX_NBR                        
            ,dup.ENTPR_RX_NBR                  
            ,dup.SRC_SYSTM                     
            ,dup.QTY                           
            ,dup.ENTPR_STORE_NBR
            --,drug.GCN_SEQ_NBR
            --,drug.GNN
            --,drug.STD_THRPC_CLS_CD
            ,MAX(abm.DUR_CONFLICT_NBR) AS DUR_CONFLICT_NBR
        FROM
            ALERTS_BY_MOD AS abm
            --INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                --ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
                --AND fill.FILL_DATE >= ADD_MONTHS(TRUNC(CURRENT_DATE, 'WW')-2, -12) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
                --AND fill.FILL_DATE < (TRUNC(CURRENT_DATE,'WW') - 2) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
            INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_DRUG_THRPY AS dup
                ON abm.DUR_CONFLICT_NBR = dup.DUR_CNFLT_NBR
            LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
                ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
                ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS dursub
                ON abm.DUR_CNFLT_SUB_TYP_ID = dursub.DUR_CNFLT_SUB_TYP_ID
        GROUP BY
             abm.PRSCRT_FILL_ID
            ,abm.STORE_NBR
            ,abm.DRUG_ID
            ,abm.FILL_DATE
            ,Conflict_Category
            ,Conflict_Code
            ,Conflict_Sub_Type
            ,abm.Exception_Type
            ,abm.Alert_Suppressed
            ,abm.PRSCBR_ID        
            ,CNFLT_RXC_FILL_ID
            ,dup.IS_RXFILL                     
            ,dup.DAY_SPLY_QTY                  
            ,RX_LAST_FILL_DATE
            ,dup.LAST_FILL_DT
            ,dup.WRTN_DT                       
            ,dup.IS_CMPND                      
            ,dup.PRSCBR_FULL_NM                
            ,dup.PHONE_NBR                     
            ,dup.ALLWNC                        
            ,dup.DSC                           
            ,dup.CLS_ID                        
            ,dup.DRUG_NM                       
            ,dup.NDC_NBR                       
            ,dup.INTND_DAY_SPLY_QTY            
            ,dup.RX_NBR                        
            ,dup.ENTPR_RX_NBR                  
            ,dup.SRC_SYSTM                     
            ,dup.QTY                           
            ,dup.ENTPR_STORE_NBR     
            --,drug.GCN_SEQ_NBR
            --,drug.GNN
            --,drug.STD_THRPC_CLS_CD
    ) WITH DATA PRIMARY INDEX (PRSCRT_FILL_ID)
    ON COMMIT PRESERVE ROWS;

/* Compile Unique DDI Alerts */
--DROP TABLE DISTINCT_DDI_ALERTS;
CREATE VOLATILE TABLE DISTINCT_DDI_ALERTS
AS
    (
        SELECT
             abm.PRSCRT_FILL_ID
            ,abm.STORE_NBR
            ,abm.FILL_DATE
            ,durcat.DUR_CONFLICT_CTGY_DSC AS Conflict_Category
            ,durcode.DUR_CONFLICT_CODE_DSC AS Conflict_Code
            ,dursub.DUR_CNFLT_SUB_TYP_DSC AS Conflict_Sub_Type
            ,abm.Exception_Type
            ,abm.Alert_Suppressed
            ,abm.PRSCBR_ID
			      ,abm.DUR_SEVERITY_LEVEL_ID
            ,drug.NDC AS FILL_NDC
            ,ddi.RXC_PRSCRT_FILL_ID AS CNFLT_RXC_FILL_ID
            ,ddi.SVRTY                         
            --,ddi.EFF_CD1                       
            --,ddi.EFF_CD2                       
            --,ddi.ANML_USE                      
            --,ddi.HUMAN_TRL_USE                 
            --,ddi.CASE_RPT_USE                  
            --,ddi.MFG_INFO_USE                  
            --,ddi.MEETING_ABSTR_INFO_USE        
            --,ddi.REVW_ARTCL_INFO_USE           
            --,ddi.DRUG_1_DSC                    
            --,ddi.DRUG_2_DESC                   
            --,ddi.EDI_PAGE                      
            --,ddi.MGPH_ID                       
            ,ddi.DSC                           
            --,ddi.STORE_NBR                     
            --,ddi.IS_RXFILL                     
            ,ddi.DAY_SPLY_QTY                  
            --,ddi.WRTN_DT                       
            ,CAST(ddi.RX_LAST_FILL_DT AS DATE) AS RX_LAST_FILL_DATE
            ,ddi.RX_LAST_FILL_DT
            --,ddi.IS_CMPND                      
            --,ddi.PRSCBR_FULL_NM                
            --,ddi.PHONE_NBR                     
            ,ddi.NDC_NBR AS INTER_NDC      
            ,ddi.ID                            
            --,ddi.INTND_DAY_SPLY_QTY            
            --,ddi.RX_NBR                        
            --,ddi.ENTPR_RX_NBR                  
            --,ddi.SRC_SYSTM                     
            --,ddi.QTY                           
            --,ddi.ENTPR_STORE_NBR               
            ,MAX(abm.DUR_CONFLICT_NBR) AS DUR_CONFLICT_NBR
        FROM
            ALERTS_BY_MOD AS abm
            --INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                --ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
                --AND fill.FILL_DATE >= ADD_MONTHS(TRUNC(CURRENT_DATE, 'WW')-2, -12) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
                --AND fill.FILL_DATE < (TRUNC(CURRENT_DATE,'WW') - 2) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
                ON abm.DRUG_ID = drug.DRUG_ID
            INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_DRG_INTRCTN AS ddi
                ON abm.DUR_CONFLICT_NBR = ddi.DUR_CNFLT_NBR
            LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
                ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
                ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS dursub
                ON abm.DUR_CNFLT_SUB_TYP_ID = dursub.DUR_CNFLT_SUB_TYP_ID
        GROUP BY
             abm.PRSCRT_FILL_ID
            ,abm.STORE_NBR
            ,abm.FILL_DATE
            ,Conflict_Category
            ,Conflict_Code
            ,Conflict_Sub_Type
            ,abm.Exception_Type
            ,abm.Alert_Suppressed
            ,abm.PRSCBR_ID
			      ,abm.DUR_SEVERITY_LEVEL_ID
            ,FILL_NDC
            ,CNFLT_RXC_FILL_ID
            ,ddi.SVRTY
            --,ddi.EFF_CD1                       
            --,ddi.EFF_CD2                       
            --,ddi.ANML_USE                      
            --,ddi.HUMAN_TRL_USE                 
            --,ddi.CASE_RPT_USE                  
            --,ddi.MFG_INFO_USE                  
            --,ddi.MEETING_ABSTR_INFO_USE        
            --,ddi.REVW_ARTCL_INFO_USE           
            --,ddi.DRUG_1_DSC                    
            --,ddi.DRUG_2_DESC                   
            --,ddi.EDI_PAGE                      
            --,ddi.MGPH_ID                       
            ,ddi.DSC                           
            --,ddi.STORE_NBR                     
            --,ddi.IS_RXFILL                     
            ,ddi.DAY_SPLY_QTY                  
            --,ddi.WRTN_DT                       
            ,RX_LAST_FILL_DATE
            ,ddi.RX_LAST_FILL_DT
            --,ddi.IS_CMPND                      
            --,ddi.PRSCBR_FULL_NM                
            --,ddi.PHONE_NBR                     
            ,INTER_NDC      
            ,ddi.ID                            
            --,ddi.INTND_DAY_SPLY_QTY            
            --,ddi.RX_NBR                        
            --,ddi.ENTPR_RX_NBR                  
            --,ddi.SRC_SYSTM                     
            --,ddi.QTY                           
            --,ddi.ENTPR_STORE_NBR               
    ) WITH DATA PRIMARY INDEX (PRSCRT_FILL_ID)
    ON COMMIT PRESERVE ROWS;
    
/* Aggregate alerts and union to Dup Therapy and DDI */ 
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DASH_ALERTS ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_ALERTS
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,CASE WHEN abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Dosing' 
              WHEN abm.DUR_CONFLICT_CODE_ID = 75 THEN 'Opioid Risk'
              ELSE durcat.DUR_CONFLICT_CTGY_DSC     
         END AS Conflict_Category
        ,CASE WHEN abm.DUR_CONFLICT_CODE_ID = 40 AND abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Unable to Screen Dose'
              ELSE durcode.DUR_CONFLICT_CODE_DSC 
         END AS Conflict_Code
        ,dursub.DUR_CNFLT_SUB_TYP_DSC AS Conflict_Sub_Type
        ,abm.Exception_Type
        ,abm.Alert_Suppressed
        ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
    FROM
        ALERTS_BY_MOD AS abm
        LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
            ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
            ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS dursub
            ON abm.DUR_CNFLT_SUB_TYP_ID = dursub.DUR_CNFLT_SUB_TYP_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON abm.FILL_DATE = cal.DAY_DT
    WHERE
        abm.DUR_CONFLICT_CTGY_ID NOT IN (3,8) --DDI & Dup Therapy are compiled separately
    GROUP BY
         Fill_Week
        ,Conflict_Category
        ,Conflict_Code
        ,Conflict_Sub_Type
        ,Exception_Type
        ,Alert_Suppressed
    UNION ALL
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,base.Conflict_Category
        ,base.Conflict_Code
        ,base.Conflict_Sub_Type
        ,base.Exception_Type
        ,base.Alert_Suppressed
        ,SUM(base.Alerts) AS Alerts
    FROM
        (
            SELECT
                 dup.FILL_DATE
                ,dup.PRSCRT_FILL_ID
                ,dup.Conflict_Category
                ,dup.Conflict_Code
                ,dup.Conflict_Sub_Type
                ,dup.Exception_Type
                ,dup.Alert_Suppressed
                ,CASE WHEN (COUNT(DISTINCT dup.CNFLT_RXC_FILL_ID) MOD 3) > 0 THEN (CAST((COUNT(DISTINCT dup.CNFLT_RXC_FILL_ID)/3.0) AS INT) + 1)
                      ELSE CAST((COUNT(DISTINCT dup.CNFLT_RXC_FILL_ID)/3.0) AS INT)
                 END AS Alerts
            FROM
                DISTINCT_DUP_ALERTS AS dup
            GROUP BY
                 dup.FILL_DATE
                ,dup.PRSCRT_FILL_ID
                ,dup.Conflict_Category
                ,dup.Conflict_Code
                ,dup.Conflict_Sub_Type
                ,dup.Exception_Type
                ,dup.Alert_Suppressed
        ) AS base
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON base.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,base.Conflict_Category
        ,base.Conflict_Code
        ,base.Conflict_Sub_Type
        ,base.Exception_Type
        ,base.Alert_Suppressed  
    UNION ALL
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,ddi.Conflict_Category
        ,ddi.Conflict_Code
        ,ddi.Conflict_Sub_Type
        ,ddi.Exception_Type
        ,ddi.Alert_Suppressed
        ,COUNT(DISTINCT ddi.DUR_CONFLICT_NBR) AS Alerts
    FROM
        DISTINCT_DDI_ALERTS AS ddi
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON ddi.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,ddi.Conflict_Category
        ,ddi.Conflict_Code
        ,ddi.Conflict_Sub_Type
        ,ddi.Exception_Type
        ,ddi.Alert_Suppressed;
        
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DASH_ALERTS';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DASH_ALERTS', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* This is used to drive the Intervention breakdown on the overview page...may be able to sunset this table and use the Int by Category table instead */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DASH_RX ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_RX
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,durint.DUR_INTERVENTION_CODE_DSC
        ,COUNT(DISTINCT abm.PRSCRT_FILL_ID) AS Scripts
    FROM
        ALERTS_BY_MOD AS abm
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
        --LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
            --ON dur.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_INTERVENTION_CODE AS durint
            ON abm.DUR_INTERVENTION_ID = durint.DUR_INTERVENTION_CODE_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON fill.FILL_DATE = cal.DAY_DT
    WHERE
        abm.Alert_Suppressed <> 'Y'
        AND abm.Exception_Type IN ('HS', 'MI')
    GROUP BY
          Fill_Week
        ,durint.DUR_INTERVENTION_CODE_DSC;
    
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DASH_RX';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DASH_RX', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Script volume by the type of DUR alerts (HS, SS, HS & SS, or No DUR Alerts) */
DELETE RXCOE_PPA.LD_DUR_VS_NO_DUR ALL;
INSERT INTO RXCOE_PPA.LD_DUR_VS_NO_DUR
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,CASE WHEN base.Hard_Stops > 0 AND base.Soft_Stops = 0 THEN 'Hard Stop'
                     WHEN base.Hard_Stops = 0 AND base.Soft_Stops > 0 THEN 'Soft Stop'
                     WHEN base.Hard_Stops > 0 AND base.Soft_Stops > 0 THEN 'Hard & Soft Stop'
                     ELSE 'No DUR'
         END AS Rx_Exception_Type
        ,COUNT(DISTINCT base.PRSCRT_FILL_ID) AS Scripts
    FROM
        (   
            SELECT
                 fill.FILL_DATE
                ,fill.PRSCRT_FILL_ID    
                ,COUNT(DISTINCT CASE WHEN abm.Exception_Type IN ('HS', 'MI') THEN abm.DUR_CONFLICT_NBR END) AS Hard_Stops
                ,COUNT(DISTINCT CASE WHEN abm.Exception_Type ='SS' THEN abm.DUR_CONFLICT_NBR END) AS Soft_Stops
            FROM
                IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                LEFT OUTER JOIN ALERTS_BY_MOD AS abm
                    ON fill.PRSCRT_FILL_ID = abm.PRSCRT_FILL_ID
                    AND abm.Alert_Suppressed = 'N'
                LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                    ON fill.FILL_DATE = cal.DAY_DT
                LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal2
                    ON cal2.DAY_DT = CURRENT_DATE
            WHERE
                fill.FILL_DATE >= ADD_MONTHS(TRUNC(CURRENT_DATE, 'WW')-1, -12) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
                AND cal.FISCAL_WEEK_START_DT < cal2.FISCAL_WEEK_START_DT
                AND fill.RX_FILL_STATUS_CODE_ID IN (6,7,9)
            GROUP BY
                 fill.FILL_DATE
                ,fill.PRSCRT_FILL_ID
        ) AS base 
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON base.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,Rx_Exception_Type;
    
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_VS_NO_DUR';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_VS_NO_DUR', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Distribution of Scripts by # of DUR Alerts, Avg. Alerts per Rx */
--DROP TABLE DUP_THERAPY_ALERTS
CREATE VOLATILE TABLE DUP_THERAPY_ALERTS
AS
    (
        SELECT
             cal.FISCAL_WEEK_START_DT AS Fill_Week
            ,dup.PRSCRT_FILL_ID
            ,dup.Conflict_Category
            ,COUNT(*) AS Alerts
        FROM
            DISTINCT_DUP_ALERTS AS dup
            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON dup.FILL_DATE = cal.DAY_DT
        WHERE
                dup.Alert_Suppressed <> 'Y'
        GROUP BY
             Fill_Week
            ,dup.PRSCRT_FILL_ID
            ,dup.Conflict_Category
    ) WITH DATA
    ON COMMIT PRESERVE ROWS;

--DROP TABLE DDI_ALERTS
CREATE VOLATILE TABLE DDI_ALERTS
AS
    (
        SELECT
             cal.FISCAL_WEEK_START_DT AS Fill_Week
            ,ddi.PRSCRT_FILL_ID
            ,ddi.Conflict_Category
            ,COUNT(*) AS Alerts
        FROM
            DISTINCT_DDI_ALERTS AS ddi
            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON ddi.FILL_DATE = cal.DAY_DT
        WHERE
                ddi.Alert_Suppressed <> 'Y'
        GROUP BY
             Fill_Week
            ,ddi.PRSCRT_FILL_ID
            ,ddi.Conflict_Category
    ) WITH DATA
    ON COMMIT PRESERVE ROWS;
	
DELETE RXCOE_PPA.LD_RX_BY_ALERT_VOL ALL;
INSERT INTO RXCOE_PPA.LD_RX_BY_ALERT_VOL
    SELECT
         base2.Fill_Week
        ,base2.Alerts
        ,COUNT(DISTINCT base2.PRSCRT_FILL_ID) AS Scripts
    FROM
        (
            SELECT
                 base.Fill_Week
                ,base.PRSCRT_FILL_ID
                ,SUM(base.Alerts) AS Alerts
            FROM
                (
                    SELECT
                         cal.FISCAL_WEEK_START_DT AS Fill_Week
                        ,fill.PRSCRT_FILL_ID
                        ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
                    FROM
                        IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                        LEFT OUTER JOIN ALERTS_BY_MOD AS abm
                            ON fill.PRSCRT_FILL_ID = abm.PRSCRT_FILL_ID
                            AND abm.Alert_Suppressed <> 'Y'
                            AND abm.DUR_CONFLICT_CTGY_ID NOT IN (3,8)
                        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                            ON fill.FILL_DATE = cal.DAY_DT
                    WHERE
                        fill.FILL_DATE >= ADD_MONTHS(TRUNC(CURRENT_DATE, 'WW')-2, -12) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
                        AND fill.FILL_DATE < (TRUNC(CURRENT_DATE,'WW') - 2) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
                        AND fill.RX_FILL_STATUS_CODE_ID IN (6,7,9)
                    GROUP BY
                         Fill_Week
                        ,fill.PRSCRT_FILL_ID
                    UNION ALL
                    SELECT
                         dup.Fill_Week
                        ,dup.PRSCRT_FILL_ID
                        ,SUM(dup.Alerts) AS Alerts
                    FROM
                        DUP_THERAPY_ALERTS AS dup
                    GROUP BY
                         dup.Fill_Week
                        ,dup.PRSCRT_FILL_ID
                    UNION ALL
                    SELECT
                         ddi.Fill_Week
                        ,ddi.PRSCRT_FILL_ID
                        ,SUM(ddi.Alerts) AS Alerts
                    FROM
                        DDI_ALERTS AS ddi
                    GROUP BY
                         ddi.Fill_Week
                        ,ddi.PRSCRT_FILL_ID
                ) AS base
            GROUP BY
                 base.Fill_Week
                ,base.PRSCRT_FILL_ID
        ) AS base2
    GROUP BY
         base2.Fill_Week
        ,base2.Alerts;
	
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_RX_BY_ALERT_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_RX_BY_ALERT_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Prescriber Consult Outcome */
/*
DELETE RXCOE_PPA.LD_DUR_PRSCBR_CONS_RSLT ALL;
INSERT INTO RXCOE_PPA.LD_DUR_PRSCBR_CONS_RSLT
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,rslt.CNSLT_RSLTN_DSC
        ,COUNT(DISTINCT fill.PRSCRT_FILL_ID) AS Scripts
    FROM
        VS_DUR_RX_LINK AS ld
        INNER JOIN  IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON ld.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
        INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_PRSCBR_CNSLT_DTL AS cons
            ON fill.PRSCRT_FILL_ID = cons.PRSCRT_FILL_ID
            AND cons.RQST_TYP_ID = 17 --DUR Clarification
        LEFT OUTER JOIN RXCOE_PPA.SEM_DIM_DUR_CNSLT_RSLTN AS rslt
            ON cons.PRSCBR_CNSLT_RSLTN_ID = rslt.PRSCBR_CNSLT_RSLTN_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON fill.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,rslt.CNSLT_RSLTN_DSC;
    
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_PRSCBR_CONS_RSLT';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_PRSCBR_CONS_RSLT', CURRENT_TIMESTAMP);
*/
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Soft Stop alerts with Forced Counsel */
/*
DELETE RXCOE_PPA.LD_DUR_SS_FC ALL;
INSERT INTO RXCOE_PPA.LD_DUR_SS_FC
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,CASE WHEN cnsl.RX_NBR IS NOT NULL THEN 'Force Counsel' 
                     ELSE 'No Force Counsel'
          END AS Forced_Counsel
        ,COUNT(DISTINCT base.PRSCRT_FILL_ID) AS Scripts
    FROM
        (
            SELECT
                 fill.FILL_DATE
                ,fill.STORE_NBR
                ,fill.RX_NBR
                ,fill.RX_FILL_NBR
                ,fill.PRSCRT_FILL_ID    
                ,COUNT(DISTINCT CASE WHEN abm.Exception_Type IN ('HS', 'MI') THEN abm.DUR_CONFLICT_NBR END) AS Hard_Stops
                ,COUNT(DISTINCT CASE WHEN abm.Exception_Type ='SS' THEN abm.DUR_CONFLICT_NBR END) AS Soft_Stops
            FROM
                ALERTS_BY_MOD AS abm
                INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                    ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
            GROUP BY
                 fill.FILL_DATE
                ,fill.STORE_NBR
                ,fill.RX_NBR
                ,fill.RX_FILL_NBR
                ,fill.PRSCRT_FILL_ID
        ) AS base
        LEFT OUTER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_RXP_CNSL_ITEM AS cnsl
            ON base.STORE_NBR = cnsl.FCLTY_ID
            AND base.RX_NBR = cnsl.RX_NBR
            AND base.RX_FILL_NBR = cnsl.FILL_NBR
            AND cnsl.CNSL_TYPE_CD = 1 --Forced Counseling
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON base.FILL_DATE = cal.DAY_DT
    WHERE
        base.Hard_Stops = 0
        AND base.Soft_Stops > 0
    GROUP BY
         Fill_Week
        ,Forced_Counsel;
    
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_SS_FC';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_SS_FC', CURRENT_TIMESTAMP);
*/
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Intervention Code distribution by Conflict Category */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_INTVTN_BY_CAT ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_INTVTN_BY_CAT
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,CASE WHEN abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Dosing' 
              WHEN abm.DUR_CONFLICT_CODE_ID = 75 THEN 'Opioid Risk'
              ELSE durcat.DUR_CONFLICT_CTGY_DSC 
         END AS Conflict_Category
        ,CASE WHEN abm.DUR_CONFLICT_CODE_ID = 40 AND abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Unable to Screen Dose'
                     ELSE durcode.DUR_CONFLICT_CODE_DSC 
         END AS Conflict_Code
        ,dursub.DUR_CNFLT_SUB_TYP_DSC AS Conflict_Sub_Type
        ,abm.Exception_Type
        ,durint.DUR_INTERVENTION_CODE_DSC
        ,COUNT(DISTINCT fill.PRSCRT_FILL_ID) AS Scripts
    FROM
        ALERTS_BY_MOD AS abm
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
        LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
            ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
            ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS dursub
            ON abm.DUR_CNFLT_SUB_TYP_ID = dursub.DUR_CNFLT_SUB_TYP_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_INTERVENTION_CODE AS durint
            ON abm.DUR_INTERVENTION_ID = durint.DUR_INTERVENTION_CODE_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON fill.FILL_DATE = cal.DAY_DT
    WHERE
        abm.Alert_Suppressed <> 'Y'
        AND 
                (
                    abm.Exception_Type = 'HS'
                    OR (
                                abm.Exception_Type = 'MI'
                                AND abm.DUR_INTERVENTION_ID IN (1,3)
                            )
                )
    GROUP BY
         Fill_Week
        ,Conflict_Category
        ,Conflict_Code
        ,Conflict_Sub_Type
        ,abm.Exception_Type
        ,durint.DUR_INTERVENTION_CODE_DSC;
    
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_INTVTN_BY_CAT';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_INTVTN_BY_CAT', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Top Drugs by Category/Code - Exclude Third Party ---Needs ALERTS_BY_MOD*/
--DROP TABLE VOL_BY_DRUG
CREATE VOLATILE TABLE VOL_BY_DRUG
AS
    (
        SELECT
             cal.FISCAL_WEEK_START_DT AS Fill_Week
            ,fill.NDC
            ,CASE WHEN abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Dosing' 
                  WHEN abm.DUR_CONFLICT_CODE_ID = 75 THEN 'Opioid Risk'
                  ELSE durcat.DUR_CONFLICT_CTGY_DSC 
             END AS Conflict_Category
            ,CASE WHEN abm.DUR_CONFLICT_CODE_ID = 40 AND abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Unable to Screen Dose'
                         ELSE durcode.DUR_CONFLICT_CODE_DSC 
             END AS Conflict_Code
            ,dursub.DUR_CNFLT_SUB_TYP_DSC AS Conflict_Sub_Type
            ,COUNT(DISTINCT fill.PRSCRT_FILL_ID) AS Scripts
        FROM
            IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            INNER JOIN IDW_COMMON.SEM_DIM_ALL_STORE AS store
                ON fill.STORE_NBR = store.STORE_NBR
                AND store.AREA_NBR in (1,2,3,4,5,7,8,9,12) and CLOS_DT IS NULL
            LEFT OUTER JOIN ALERTS_BY_MOD AS abm
                ON fill.PRSCRT_FILL_ID = abm.PRSCRT_FILL_ID
                AND abm.Alert_Suppressed <> 'Y'
                AND abm.DUR_CONFLICT_CTGY_ID <> 16 --Exclude Third Party
            LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
                ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
                ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS dursub
                ON abm.DUR_CNFLT_SUB_TYP_ID = dursub.DUR_CNFLT_SUB_TYP_ID
            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON fill.FILL_DATE = cal.DAY_DT
        WHERE
            fill.FILL_DATE >= ADD_MONTHS(CURRENT_DATE, -12)
            AND fill.RX_FILL_STATUS_CODE_ID IN (6,7,9)
        GROUP BY
             Fill_Week
            ,fill.NDC
            ,Conflict_Category
            ,Conflict_Code
            ,Conflict_Sub_Type
    ) WITH DATA PRIMARY INDEX (NDC)
    ON COMMIT PRESERVE ROWS;
    
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL
	SELECT
         vol.*
        ,drug.GCN_SEQ_NBR
        ,drug.GNN
        ,drug.LBL_NM
    FROM
        VOL_BY_DRUG AS vol
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
            ON vol.NDC = drug.NDC;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Dosing Volumes by Age ---Needs ALERTS_BY_MOD */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DOSING_BY_AGE ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DOSING_BY_AGE
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        --,durcat.DUR_CONFLICT_CTGY_DSC AS Conflict_Category
        ,CASE WHEN abm.DUR_CONFLICT_CODE_ID = 40 AND abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Unable to Screen Dose'
              ELSE durcode.DUR_CONFLICT_CODE_DSC 
         END AS Conflict_Code
        ,(EXTRACT(YEAR FROM fill.FILL_DATE) - EXTRACT(YEAR FROM pat.PTNT_DT_OF_BRTH)) AS Patient_Age
        ,CASE WHEN (fill.FILL_DATE - pat.PTNT_DT_OF_BRTH) <= 30 THEN 'Ped 30 or Under'
                     WHEN (EXTRACT(YEAR FROM fill.FILL_DATE) - EXTRACT(YEAR FROM pat.PTNT_DT_OF_BRTH)) BETWEEN 0 AND 18 THEN 'Ped Over 30'
                     WHEN (EXTRACT(YEAR FROM fill.FILL_DATE) - EXTRACT(YEAR FROM pat.PTNT_DT_OF_BRTH)) BETWEEN 19 AND 35 THEN '19-35'
                     WHEN (EXTRACT(YEAR FROM fill.FILL_DATE) - EXTRACT(YEAR FROM pat.PTNT_DT_OF_BRTH)) BETWEEN 36 AND 65 THEN '36-65'
                     WHEN (EXTRACT(YEAR FROM fill.FILL_DATE) - EXTRACT(YEAR FROM pat.PTNT_DT_OF_BRTH)) > 65 THEN '65+'
         END AS Patient_Age_Group
        ,COUNT(DISTINCT fill.PRSCRT_FILL_ID) AS Scripts
    FROM
        ALERTS_BY_MOD AS abm
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_DIM_ALL_PATIENT AS pat
            ON fill.PTNT_ID = pat.PTNT_ID
        --LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
            --ON dur.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
            ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON fill.FILL_DATE = cal.DAY_DT
    WHERE
        abm.DUR_CONFLICT_CTGY_ID = 4
        AND abm.Alert_Suppressed <> 'Y'
    GROUP BY
         Fill_Week
        --,Conflict_Category
        ,Conflict_Code
        ,Patient_Age
        ,Patient_Age_Group;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DOSING_BY_AGE';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DOSING_BY_AGE', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Top Drugs w/Reason For Service - Third Party  ---Needs ALERTS_BY_MOD */
--DROP TABLE VOL_BY_DRUG_TP;
CREATE VOLATILE TABLE VOL_BY_DRUG_TP
AS
    (
        SELECT
             cal.FISCAL_WEEK_START_DT AS Fill_Week
            ,fill.NDC
            ,CASE WHEN abm.DUR_CONFLICT_CODE_ID = 3 OR abm.DUR_CONFLICT_CTGY_ID = 4 THEN 'Dosing' 
                         WHEN abm.DUR_CONFLICT_CTGY_ID IN (1,18) THEN 'Drug Allergy'
                         ELSE durcat.DUR_CONFLICT_CTGY_DSC
             END AS Conflict_Category
            ,durcode.DUR_CONFLICT_CODE_DSC AS Reason_For_Service
            ,COUNT(DISTINCT fill.PRSCRT_FILL_ID) AS Scripts
        FROM
            IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            INNER JOIN IDW_COMMON.SEM_DIM_ALL_STORE AS store
                ON fill.STORE_NBR = store.STORE_NBR
                AND store.AREA_NBR in (1,2,3,4,5,7,8,9,12) and CLOS_DT IS NULL
            LEFT OUTER JOIN ALERTS_BY_MOD AS abm
                ON fill.PRSCRT_FILL_ID = abm.PRSCRT_FILL_ID
                AND abm.DUR_CONFLICT_CTGY_ID = 16 --Third Party
                AND abm.Alert_Suppressed <> 'Y'
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_THIRD_PARTY AS tp
                ON abm.DUR_CONFLICT_NBR = tp.DUR_CNFLT_NBR
            LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
                ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
                ON tp.RSN_FOR_SRVC_CD = durcode.DUR_CONFLICT_CODE_CD
            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON fill.FILL_DATE = cal.DAY_DT
        WHERE
            fill.FILL_DATE >= ADD_MONTHS(CURRENT_DATE, -12)
            AND fill.RX_FILL_STATUS_CODE_ID IN (6,7,9)
			AND abm.Alert_Suppressed <> 'Y'
        GROUP BY
             Fill_Week
            ,fill.NDC
            ,Conflict_Category
            ,Reason_For_Service
    ) WITH DATA PRIMARY INDEX (NDC)
    ON COMMIT PRESERVE ROWS;
    
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL_TP ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL_TP
    SELECT
         vol.*
        ,drug.GCN_SEQ_NBR
        ,drug.GNN
        ,drug.LBL_NM
    FROM
        VOL_BY_DRUG_TP AS vol
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
            ON vol.NDC = drug.NDC;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL_TP';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DASH_TOP_DRUG_BY_VOL_TP', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Third Party Alerts --Rx Volume by Agency is compiled separately */
--DROP TABLE THIRD_PARTY_ALERTS;
CREATE VOLATILE TABLE THIRD_PARTY_ALERTS
AS
    (
        SELECT
             cal.FISCAL_WEEK_START_DT AS Fill_Week
            ,drug.STD_THRPC_CLS_CD
            --,durcode.DUR_CONFLICT_CODE_CD
            --,durcode.DUR_CONFLICT_CODE_DSC AS Conflict_Code
            ,fill.AGNCY_ID
            --,ag.AGNCY_NM
            --,tp.TP_NM
            ,tp.RSN_FOR_SRVC_CD
            --,rsncode.DUR_CONFLICT_CODE_DSC AS Reason_For_Service_Desc
            ,tp.PHMCY_IND
            ,COUNT(DISTINCT tp.DUR_CNFLT_NBR) AS Alerts
        FROM
            ALERTS_BY_MOD AS abm
            INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
            INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_THIRD_PARTY AS tp
                ON abm.DUR_CONFLICT_NBR = tp.DUR_CNFLT_NBR
            INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
                ON fill.NDC = drug.NDC
            --LEFT OUTER JOIN IDW_MANAGED_CARE_S_BC.SEM_DIM_ALL_AGENCY AS ag
                --ON fill.AGNCY_ID = ag.AGNCY_ID
            --LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS rsncode
                --ON tp.RSN_FOR_SRVC_CD = rsncode.DUR_CONFLICT_CODE_CD
            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON fill.FILL_DATE = cal.DAY_DT
        WHERE
            abm.Alert_Suppressed <> 'Y'
        GROUP BY
             Fill_Week
            ,drug.STD_THRPC_CLS_CD
            --,durcode.DUR_CONFLICT_CODE_CD
            --,Conflict_Code
            ,fill.AGNCY_ID
            --,ag.AGNCY_NM
            --,tp.TP_NM
            ,tp.RSN_FOR_SRVC_CD
            --,Reason_For_Service_Desc
            ,tp.PHMCY_IND
    ) WITH DATA PRIMARY INDEX (Fill_Week, AGNCY_ID, RSN_FOR_SRVC_CD)
    ON COMMIT PRESERVE ROWS;
	
DELETE RXCOE_PPA.LD_DUR_INTERNAL_THIRD_PARTY ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_THIRD_PARTY
    SELECT
         tp.Fill_Week
        ,tp.STD_THRPC_CLS_CD
        ,tp.RSN_FOR_SRVC_CD
        ,tp.PHMCY_IND
        ,tp.Alerts
        ,ag1.AGNCY_NM
        ,rsncode.DUR_CONFLICT_CODE_DSC AS Reason_For_Service_Desc
    FROM
        THIRD_PARTY_ALERTS AS tp
        LEFT OUTER JOIN IDW_MANAGED_CARE_S_BC.SEM_DIM_ALL_AGENCY AS ag1
            ON tp.AGNCY_ID = ag1.AGNCY_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS rsncode
            ON tp.RSN_FOR_SRVC_CD = rsncode.DUR_CONFLICT_CODE_CD;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_THIRD_PARTY';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_THIRD_PARTY', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Top Rising Drugs - Past Month, Week Volume */
--DROP TABLE WEEK_AND_MONTH_COUNTS
--CREATE VOLATILE TABLE WEEK_AND_MONTH_COUNTS
----DROP TABLE RXCOE_PPA.WEEK_AND_MONTH_COUNTS;
----CREATE TABLE RXCOE_PPA.WEEK_AND_MONTH_COUNTS
--AS
--    (
--		SELECT
--             CASE WHEN durcat.DUR_CONFLICT_CTGY_ID IN (1,18) THEN 'Drug Allergy'
--			 	  WHEN abm.DUR_CONFLICT_CODE_ID = 75 THEN 'Opioid Risk'
--                  WHEN durcat.DUR_CONFLICT_CTGY_ID = 4 OR durcode.DUR_CONFLICT_CODE_ID = 3 THEN 'Dosing'
--                  ELSE durcat.DUR_CONFLICT_CTGY_DSC
--             END AS Conflict_Category
--            ,durcode.DUR_CONFLICT_CODE_DSC
--			,dursub.DUR_CNFLT_SUB_TYP_DSC AS Conflict_Sub_Type
--            ,drug.GCN_SEQ_NBR
--            ,drug.NDC
--            ,drug.LBL_NM
--            ,'Month' AS TimeLength
--            ,CASE WHEN abm.FILL_DATE BETWEEN (cal2.FISCAL_WEEK_START_DT - 28) AND (cal2.FISCAL_WEEK_START_DT - 1) THEN 'Last Month'
--                  WHEN abm.FILL_DATE BETWEEN (cal2.FISCAL_WEEK_START_DT - 56) AND (cal2.FISCAL_WEEK_START_DT - 29) THEN 'Two Months'
--             END AS TimePeriod
--            ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
--        FROM
--            ALERTS_BY_MOD AS abm
--            INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
--                ON abm.DRUG_ID = drug.DRUG_ID
--            LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
--                ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
--            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
--                ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
--			LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS dursub
--				ON abm.DUR_CNFLT_SUB_TYP_ID = dursub.DUR_CNFLT_SUB_TYP_ID
--			LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal2
--                ON cal2.DAY_DT = CURRENT_DATE
--        WHERE
--            abm.Alert_Suppressed <> 'Y'
--			AND abm.FILL_DATE BETWEEN (cal2.FISCAL_WEEK_START_DT - 56) AND (cal2.FISCAL_WEEK_START_DT - 1)
--        GROUP BY
--             Conflict_Category
--            ,durcode.DUR_CONFLICT_CODE_DSC
--			,Conflict_Sub_Type
--            ,drug.GCN_SEQ_NBR
--            ,drug.NDC
--            ,drug.LBL_NM
--            ,TimeLength
--            ,TimePeriod
--		UNION ALL
--		        SELECT
--             CASE WHEN durcat.DUR_CONFLICT_CTGY_ID IN (1,18) THEN 'Drug Allergy'
--                  WHEN durcat.DUR_CONFLICT_CTGY_ID = 4 OR durcode.DUR_CONFLICT_CODE_ID = 3 THEN 'Dosing'
--				  WHEN abm.DUR_CONFLICT_CODE_ID = 75 THEN 'Opioid Risk'
--                  ELSE durcat.DUR_CONFLICT_CTGY_DSC
--             END AS Conflict_Category
--            ,durcode.DUR_CONFLICT_CODE_DSC
--			,dursub.DUR_CNFLT_SUB_TYP_DSC AS Conflict_Sub_Type
--            ,drug.GCN_SEQ_NBR
--            ,drug.NDC
--            ,drug.LBL_NM
--            ,'Week' AS TimeLength
--            ,CASE WHEN cal.FISCAL_WEEK_START_DT = (cal2.FISCAL_WEEK_START_DT - 7) THEN 'Last Week'
--                  WHEN cal.FISCAL_WEEK_START_DT = (cal2.FISCAL_WEEK_START_DT - 14) THEN 'Two Weeks'
--             END AS TimePeriod
--            ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
--        FROM
--            ALERTS_BY_MOD AS abm
--            INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
--                ON abm.DRUG_ID = drug.DRUG_ID
--            LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
--                ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
--            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
--                ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
--			LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS dursub
--				ON abm.DUR_CNFLT_SUB_TYP_ID = dursub.DUR_CNFLT_SUB_TYP_ID
--			LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal2
--                ON cal2.DAY_DT = CURRENT_DATE
--			LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
--                ON abm.FILL_DATE = cal.DAY_DT
--        WHERE
--            abm.Alert_Suppressed <> 'Y'
--			AND (
--					cal.FISCAL_WEEK_START_DT = (cal2.FISCAL_WEEK_START_DT - 14)
--					OR
--					cal.FISCAL_WEEK_START_DT = (cal2.FISCAL_WEEK_START_DT - 7)
--				)
--        GROUP BY
--             Conflict_Category
--            ,durcode.DUR_CONFLICT_CODE_DSC
--			,Conflict_Sub_Type
--            ,drug.GCN_SEQ_NBR
--            ,drug.NDC
--            ,drug.LBL_NM
--            ,TimeLength
--            ,TimePeriod
--    ) WITH DATA PRIMARY INDEX (Conflict_Category, DUR_CONFLICT_CODE_DSC, Conflict_Sub_Type, GCN_SEQ_NBR, NDC, LBL_NM, TimeLength, TimePeriod);
--    ON COMMIT PRESERVE ROWS;
--
--DELETE RXCOE_PPA.LD_DUR_INTERNAL_DASH_TOP_DRUG_RISERS ALL;
--INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_TOP_DRUG_RISERS
--    SELECT
--        *
--    FROM
--        WEEK_AND_MONTH_COUNTS;
	
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DASH_TOP_DRUG_RISERS';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DASH_TOP_DRUG_RISERS', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Third Party Rx Volume vs. Alert Volume by Agency */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_THIRD_PARTY_VOL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_THIRD_PARTY_VOL
    SELECT
         base.Fill_Week
        ,ag.AGNCY_NM
        ,base.Scripts
        ,base.Alerts
    FROM
        (
            SELECT
                 cal.FISCAL_WEEK_START_DT AS Fill_Week
                ,fill.AGNCY_ID
                ,COUNT(DISTINCT fill.PRSCRT_FILL_ID) AS Scripts
                ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
            FROM
                IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                LEFT OUTER JOIN ALERTS_BY_MOD AS abm
                    ON fill.PRSCRT_FILL_ID = abm.PRSCRT_FILL_ID
                    AND abm.DUR_CONFLICT_CTGY_ID = 16
                    AND abm.Alert_Suppressed <> 'Y'
                --LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_THIRD_PARTY AS tp
                    --ON abm.DUR_CONFLICT_NBR = tp.DUR_CNFLT_NBR
                --LEFT OUTER JOIN IDW_MANAGED_CARE_S_BC.SEM_DIM_ALL_AGENCY AS ag
                    --ON fill.AGNCY_ID = ag.AGNCY_ID
                LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                    ON fill.FILL_DATE = cal.DAY_DT
            WHERE
                fill.FILL_DATE >= ADD_MONTHS(TRUNC(CURRENT_DATE, 'WW')-2, -12) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
                AND fill.FILL_DATE < (TRUNC(CURRENT_DATE,'WW') - 2) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
                AND fill.RX_FILL_STATUS_CODE_ID IN (6,7,9)
            GROUP BY
                 Fill_Week
                ,fill.AGNCY_ID
        ) AS base
    LEFT OUTER JOIN IDW_MANAGED_CARE_S_BC.SEM_DIM_ALL_AGENCY AS ag
        ON base.AGNCY_ID = ag.AGNCY_ID;
    
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_THIRD_PARTY_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_THIRD_PARTY_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Distribution of Scripts by # of Duplicate Therapy Alerts, Avg.Dup Therapy Alerts per Rx */
DELETE FROM RXCOE_PPA.LD_RX_BY_DT_ALERT_VOL;
INSERT INTO RXCOE_PPA.LD_RX_BY_DT_ALERT_VOL
    SELECT
         base.Fill_Week
        ,base.Alerts
        ,COUNT(DISTINCT base.PRSCRT_FILL_ID) AS Scripts
    FROM
        (
            SELECT
                 cal.FISCAL_WEEK_START_DT AS Fill_Week
                ,dup.PRSCRT_FILL_ID
                ,dup.Conflict_Category
                ,COUNT(*) AS Alerts
            FROM
                DISTINCT_DUP_ALERTS AS dup
                LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                    ON dup.FILL_DATE = cal.DAY_DT
            WHERE
                    dup.Alert_Suppressed <> 'Y'
            GROUP BY
                 Fill_Week
                ,dup.PRSCRT_FILL_ID
                ,dup.Conflict_Category
        ) AS base
    GROUP BY
         base.Fill_Week
        ,base.Alerts;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_RX_BY_DT_ALERT_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_RX_BY_DT_ALERT_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Duplicate Therapy Alert Volume by Drug Pair */
DELETE FROM RXCOE_PPA.LD_ALERTS_BY_DT_PAIR;
INSERT INTO RXCOE_PPA.LD_ALERTS_BY_DT_PAIR
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,dup.CLS_ID AS Class_ID
        ,dup.DSC AS Class_Description
        ,drug.LBL_NM AS Fill_Drug
        ,dup.DRUG_NM AS Duplicate_Drug
        ,COUNT(DISTINCT dup.DUR_CONFLICT_NBR) AS Alerts 
    FROM
        DISTINCT_DUP_ALERTS AS dup
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
            ON dup.DRUG_ID = drug.DRUG_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                    ON dup.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,Class_ID
        ,Class_Description
        ,Fill_Drug
        ,Duplicate_Drug;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_ALERTS_BY_DT_PAIR';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_ALERTS_BY_DT_PAIR', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Compile data for Precautions modules */
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_PREC;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_PREC
        SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,abm.Exception_Type
        ,durcat.DUR_CONFLICT_CTGY_DSC AS Conflict_Category
        ,durcode.DUR_CONFLICT_CODE_DSC AS Conflict_Code
        ,pre.ID
        ,pre.DSC AS Precaution_Class
        ,pre.CMNT AS Precaution_Comment
        ,pre.SVRTY AS Severity
        ,drug.GCN_SEQ_NBR
        ,drug.GNN
        ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
    FROM
        ALERTS_BY_MOD AS abm
        INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_PRECAUTIONS AS pre
            ON abm.DUR_CONFLICT_NBR = pre.DUR_CNFLT_NBR
        LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_CONFLICT_CTGY AS durcat
            ON abm.DUR_CONFLICT_CTGY_ID = durcat.DUR_CONFLICT_CTGY_ID
        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CONFLICT_CODE AS durcode
            ON abm.DUR_CONFLICT_CODE_ID = durcode.DUR_CONFLICT_CODE_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
            ON abm.DRUG_ID = drug.DRUG_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON abm.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,abm.Exception_Type
        ,Conflict_Category
        ,Conflict_Code
        ,pre.ID
        ,Precaution_Class
        ,Precaution_Comment
        ,Severity
        ,drug.GCN_SEQ_NBR
        ,drug.GNN;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_PREC';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_PREC', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* DDI Alerts by % of Day Supply Elapsed & Conflict Rx status*/
--DROP TABLE DDI_CNFLT_RX_STATUS;
CREATE VOLATILE TABLE DDI_CNFLT_RX_STATUS
AS
    (
        SELECT
             ddi.FILL_DATE
            ,ddi.DUR_CONFLICT_NBR
            ,ddi.CNFLT_RXC_FILL_ID
            ,wf.ACTIVITY_ID
        FROM
            DISTINCT_DDI_ALERTS AS ddi
            INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_WC_RX_FILL_EMP_WF AS wf
                ON ddi.CNFLT_RXC_FILL_ID = wf.RXC_PRSCRT_FILL_ID
                AND ddi.RX_LAST_FILL_DT < wf.ACTIVITY_DT
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY ddi.FILL_DATE, ddi.DUR_CONFLICT_NBR, ddi.CNFLT_RXC_FILL_ID ORDER BY wf.ACTIVITY_DT DESC) = 1
    ) WITH DATA
    ON COMMIT PRESERVE ROWS;

DELETE RXCOE_PPA.LD_DUR_INTERNAL_DDI_DAY_SPLY ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DDI_DAY_SPLY
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,ddi.Exception_Type
		,sev.DUR_SEVERITY_LEVEL_DSC
        ,act.RX_AUDIT_ACTV_DSC AS Activity_Description
        ,CASE WHEN ddi.DAY_SPLY_QTY <= 0 THEN '[0-20%]'
                            WHEN ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) >= 0 AND ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) <= 0.2 THEN '[0-20%]'
                            WHEN ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) > 0.2 AND ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) <= 0.6 THEN '(20-60%]'
                            WHEN ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) > 0.6 AND ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) <= 0.8 THEN '(60-80%]'
                            WHEN ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) > 0.8 AND ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) <= 1 THEN '(80-100%]'
                            WHEN ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) > 1 AND ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) <= 1.5 THEN '(100-150%]'
                            WHEN ((ddi.FILL_DATE - ddi.RX_LAST_FILL_DATE)/CAST(ddi.DAY_SPLY_QTY AS FLOAT)) > 1.5 THEN '150%+'
         END AS "Day Supply Elapsed"
         ,COUNT(DISTINCT ddi.DUR_CONFLICT_NBR) AS Alerts
    FROM
        DISTINCT_DDI_ALERTS AS ddi
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON ddi.CNFLT_RXC_FILL_ID = fill.RXC_PRSCRT_FILL_ID
        LEFT OUTER JOIN DDI_CNFLT_RX_STATUS AS cnflt
            ON ddi.DUR_CONFLICT_NBR = cnflt.DUR_CONFLICT_NBR
        LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_WC_RX_AUDIT_ACTV AS act
            ON cnflt.ACTIVITY_ID = act.RX_AUDIT_ACTV_ID
		LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_SEVERITY_LEVEL AS sev
            ON ddi.DUR_SEVERITY_LEVEL_ID = sev.DUR_SEVERITY_LEVEL_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON ddi.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,ddi.Exception_Type
		,sev.DUR_SEVERITY_LEVEL_DSC
        ,act.RX_AUDIT_ACTV_DSC
        ,ddi.DAY_SPLY_QTY
        ,ddi.FILL_DATE
        ,ddi.RX_LAST_FILL_DATE;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DDI_DAY_SPLY';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DDI_DAY_SPLY', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* DDI volume by Severity/DDID/Exception Type */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DDI ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DDI
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,ddi.ID AS DDI_ID
        ,ddi.DSC AS DDI_Description
        ,sev.DUR_SEVERITY_LEVEL_DSC AS Severity
        ,ddi.Exception_Type
        ,COUNT(DISTINCT ddi.DUR_CONFLICT_NBR) AS Alerts
    FROM
        DISTINCT_DDI_ALERTS AS ddi
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON ddi.FILL_DATE = cal.DAY_DT
		LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_SEVERITY_LEVEL AS sev
            ON ddi.DUR_SEVERITY_LEVEL_ID = sev.DUR_SEVERITY_LEVEL_ID
    GROUP BY
         Fill_Week
        ,DDI_ID
        ,DDI_Description
        ,Severity
        ,ddi.Exception_Type;
        
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DDI';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DDI', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* DDI Alerts by same/different Store, Prescriber */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DDI_STORE_PRSCBR ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DDI_STORE_PRSCBR
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,CASE WHEN ddi.STORE_NBR = fill.STORE_NBR THEN 'Same'
                     ELSE 'Different'
         END AS "Same Store"
        ,CASE WHEN ddi.PRSCBR_ID = fill.PRSCBR_ID THEN 'Same'
                     ELSE 'Different'
          END AS "Same Prescriber"
         ,COUNT(DISTINCT ddi.DUR_CONFLICT_NBR) AS Alerts
    FROM
        DISTINCT_DDI_ALERTS AS ddi
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON ddi.CNFLT_RXC_FILL_ID = fill.RXC_PRSCRT_FILL_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON ddi.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
         ,2
         ,3;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DDI_STORE_PRSCBR';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DDI_STORE_PRSCBR', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Dup Therapy Alerts by % of Day Supply Elapsed & Conflict Rx status*/
--DROP TABLE DUP_CNFLT_RX_STATUS;
CREATE VOLATILE TABLE DUP_CNFLT_RX_STATUS
AS
    (
        SELECT
             dup.FILL_DATE
            ,dup.DUR_CONFLICT_NBR
            ,dup.CNFLT_RXC_FILL_ID
            ,wf.ACTIVITY_ID
        FROM
            DISTINCT_DUP_ALERTS AS dup
            INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_WC_RX_FILL_EMP_WF AS wf
                ON dup.CNFLT_RXC_FILL_ID = wf.RXC_PRSCRT_FILL_ID
                AND dup.LAST_FILL_DT < wf.ACTIVITY_DT
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY dup.FILL_DATE, dup.DUR_CONFLICT_NBR, dup.CNFLT_RXC_FILL_ID ORDER BY wf.ACTIVITY_DT DESC) = 1
    ) WITH DATA PRIMARY INDEX (CNFLT_RXC_FILL_ID)
    ON COMMIT PRESERVE ROWS;

DELETE RXCOE_PPA.LD_DUR_INTERNAL_DUP_DAY_SPLY ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DUP_DAY_SPLY
    SELECT distinct
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,dup.Exception_Type
        ,act.RX_AUDIT_ACTV_DSC AS Activity_Description
        ,CASE WHEN dup.DAY_SPLY_QTY <= 0 THEN '[0-20%]'
                     WHEN ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) >= 0 AND ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) <= 0.2 THEN '[0-20%]'
                     WHEN ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) > 0.2 AND ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) <= 0.6 THEN '(20-60%]'
                     WHEN ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) > 0.6 AND ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) <= 0.8 THEN '(60-80%]'
                     WHEN ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) > 0.8 AND ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) <= 1 THEN '(80-100%]'
                     WHEN ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) > 1 AND ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) <= 1.5 THEN '(100-150%]'
                     WHEN ((dup.FILL_DATE - dup.RX_LAST_FILL_DATE)/CAST(dup.DAY_SPLY_QTY AS FLOAT)) > 1.5 THEN '150%+'
         END AS "Day Supply Elapsed"
         ,COUNT(DISTINCT dup.DUR_CONFLICT_NBR) AS Alerts
    FROM
        DISTINCT_DUP_ALERTS AS dup
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON dup.CNFLT_RXC_FILL_ID = fill.RXC_PRSCRT_FILL_ID
        LEFT OUTER JOIN DUP_CNFLT_RX_STATUS AS cnflt
            ON dup.DUR_CONFLICT_NBR = cnflt.DUR_CONFLICT_NBR
        LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_WC_RX_AUDIT_ACTV AS act
            ON cnflt.ACTIVITY_ID = act.RX_AUDIT_ACTV_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON dup.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,dup.Exception_Type
        ,act.RX_AUDIT_ACTV_DSC
        ,dup.DAY_SPLY_QTY
        ,dup.FILL_DATE
        ,dup.RX_LAST_FILL_DATE;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DUP_DAY_SPLY';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DUP_DAY_SPLY', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Dup Therapy volume by Class ID/Exception Type */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DUP ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DUP
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,dup.CLS_ID AS Class_ID
        ,dup.DSC AS DT_Description
        ,dup.Exception_Type
        ,COUNT(DISTINCT dup.DUR_CONFLICT_NBR) AS Alerts
    FROM
        DISTINCT_DUP_ALERTS AS dup
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON dup.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,Class_ID
        ,DT_Description
        ,dup.Exception_Type;
        
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DUP';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DUP', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Dup Therapy Alerts by same/different Store, Prescriber */
DELETE RXCOE_PPA.LD_DUR_INTERNAL_DUP_STORE_PRSCBR ALL;
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DUP_STORE_PRSCBR
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,CASE WHEN dup.STORE_NBR = fill.STORE_NBR THEN 'Same'
                     ELSE 'Different'
         END AS "Same Store"
        ,CASE WHEN dup.PRSCBR_ID = fill.PRSCBR_ID THEN 'Same'
                     ELSE 'Different'
          END AS "Same Prescriber"
         ,COUNT(DISTINCT dup.DUR_CONFLICT_NBR) AS Alerts
    FROM
        DISTINCT_DUP_ALERTS AS dup
        INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
            ON dup.CNFLT_RXC_FILL_ID = fill.RXC_PRSCRT_FILL_ID
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON dup.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
         ,2
         ,3;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_INTERNAL_DUP_STORE_PRSCBR';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_INTERNAL_DUP_STORE_PRSCBR', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Scripts w/TP & CVS DDI Alert */
--DROP TABLE TP_DDI_RX;
CREATE VOLATILE TABLE TP_DDI_RX
AS
    (
        SELECT DISTINCT
             cal.FISCAL_WEEK_START_DT AS Fill_Week 
            ,abm.PRSCRT_FILL_ID
            ,abm.RXC_PRSCRT_FILL_ID
            ,abm.DUR_CONFLICT_NBR
            ,fill.AGNCY_ID
        FROM
            ALERTS_BY_MOD AS abm
            INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_THIRD_PARTY AS tp
                ON abm.DUR_CONFLICT_NBR = tp.DUR_CNFLT_NBR
                AND tp.PHMCY_IND IN (1,2)
            INNER JOIN IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
                ON abm.PRSCRT_FILL_ID = fill.PRSCRT_FILL_ID
            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON fill.FILL_DATE = cal.DAY_DT
            WHERE
                abm.DUR_CONFLICT_CTGY_ID = 16 --Third Party
                AND abm.DUR_CONFLICT_CODE_ID = 14 --DDI
                AND abm.Alert_Suppressed = 'N'
    ) WITH DATA PRIMARY INDEX (RXC_PRSCRT_FILL_ID)
    ON COMMIT PRESERVE ROWS;

DELETE RXCOE_PPA.LD_DUR_TP_CVS_DDI_VOL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_TP_CVS_DDI_VOL
        SELECT
             tp.Fill_Week
            ,ag.AGNCY_NM
            ,CASE WHEN dur.PRSCRT_FILL_ID IS NOT NULL THEN 'TP DDI & CVS DDI'
                         WHEN dur.PRSCRT_FILL_ID IS NULL THEN 'TP DDI Only'
             END AS "TP vs CVS DDI"
            ,COUNT(DISTINCT tp.PRSCRT_FILL_ID) AS Alerts
        FROM
            TP_DDI_RX AS tp
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_PROCESS AS dur
                ON tp.RXC_PRSCRT_FILL_ID = dur.RXC_PRSCRT_FILL_ID
                AND dur.FINAL_ITER_IND = 1
                AND dur.DUR_CONFLICT_CTGY_ID = 3 --DDI
                AND (
                                (dur.DUR_EXCEPT_TYP_ID = 1 AND dur.DUR_INTERVENTION_ID <> -9999)
                                OR
                                dur.DUR_EXCEPT_TYP_ID = 2
                            )
                AND (dur.ALRT_SUPPRESSED_IND <> 'Y' OR dur.ALRT_SUPPRESSED_IND IS NULL)
                AND (dur.PHMCT_DSPLY_CD <> 2 OR dur.PHMCT_DSPLY_CD IS NULL)
            LEFT OUTER JOIN IDW_MANAGED_CARE_S_BC.SEM_DIM_ALL_AGENCY AS ag
                ON tp.AGNCY_ID = ag.AGNCY_ID
        GROUP BY
             tp.Fill_Week
            ,ag.AGNCY_NM
            ,"TP vs CVS DDI";

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_TP_CVS_DDI_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_TP_CVS_DDI_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Drug-Disease Alert Volume by Condition & Drug */
DELETE RXCOE_PPA.LD_DUR_DASH_COND_DRUG_VOL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_COND_DRUG_VOL
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,cond.COND_ID
        ,cond.COND_DSC
        ,cond.ICD_CD_QLFR
        ,cond.DTL_DRUG_DSC AS "Agent of Concern"
        ,sev.DUR_SEVERITY_LEVEL_DSC
        ,drug.GCN_SEQ_NBR
        ,drug.GNN
        --,drug.NDC
        --,drug.LBL_NM
        ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
    FROM
        ALERTS_BY_MOD AS abm
        INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_CONDITION AS cond
            ON abm.DUR_CONFLICT_NBR = cond.DUR_CNFLT_NBR
        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
            ON abm.DRUG_ID = drug.DRUG_ID
        LEFT OUTER JOIN RXCOE_PSWP.SEM_DIM_DUR_SEVERITY_LEVEL AS sev
            ON abm.DUR_SEVERITY_LEVEL_ID = sev.DUR_SEVERITY_LEVEL_ID
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON abm.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,cond.COND_ID
        ,cond.COND_DSC
        ,cond.ICD_CD_QLFR
        ,"Agent of Concern"
        ,sev.DUR_SEVERITY_LEVEL_DSC
        ,drug.GCN_SEQ_NBR
        ,drug.GNN;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_COND_DRUG_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_COND_DRUG_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Drug-Disease Alert Density per Rx */
--DELETE RXCOE_PPA.LD_DUR_DASH_COND_DENS ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_COND_DENS
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,cond.COND_ID
        ,cond.COND_DSC
        ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
        ,COUNT(DISTINCT abm.PRSCRT_FILL_ID) AS Scripts
    FROM
        ALERTS_BY_MOD AS abm
        INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_CONDITION AS cond
            ON abm.DUR_CONFLICT_NBR = cond.DUR_CNFLT_NBR
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON abm.FILL_DATE = cal.DAY_DT
    GROUP BY
         Fill_Week
        ,cond.COND_ID
        ,cond.COND_DSC;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_COND_DENS';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_COND_DENS', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* % Rx w/Drug Condition & Precaution Alert */
DELETE RXCOE_PPA.LD_DUR_COND_PREC_RX ALL;
INSERT INTO RXCOE_PPA.LD_DUR_COND_PREC_RX
    SELECT DISTINCT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,CASE WHEN prec.PRSCRT_FILL_ID IS NOT NULL THEN 'Condition & Precaution Alert'
                     ELSE 'Condition Alert Only'
         END AS "Condition/Precaution"
        ,COUNT(DISTINCT cond.PRSCRT_FILL_ID) AS "Total Drug Condition Scripts"
    FROM
        ALERTS_BY_MOD AS cond
        LEFT OUTER JOIN ALERTS_BY_MOD AS prec
            ON cond.RXC_PRSCRT_FILL_ID = prec.RXC_PRSCRT_FILL_ID
            AND prec.DUR_CONFLICT_CTGY_ID BETWEEN 9 AND 12
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON cond.FILL_DATE = cal.DAY_DT
    WHERE
        cond.DUR_CONFLICT_CTGY_ID = 2
    GROUP BY
          Fill_Week
         ,2;
    
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_COND_PREC_RX';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_COND_PREC_RX', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Drug-Allergy Alert Volume */
--Combine FDB & DACN code data
--DROP TABLE ALLERGY_CODES;
CREATE MULTISET VOLATILE TABLE ALLERGY_CODES
AS
    (
        SELECT
             fdb.ALLERGEN_REF_NUM
            ,fdb.ALLERGEN_REF_TYPE
            ,fdb.DESCRIPTION
        FROM
            RXCOE_PPA.SEM_DIM_FDB_ALLERGY AS fdb
        UNION ALL
        SELECT
             dacn.ALLERGEN_REF_NUM
            ,dacn.ALLERGEN_REF_TYPE
            ,dacn.DESCRIPTION
        FROM
            RXCOE_PPA.LD_DACN_ALRGY_CODES AS dacn
    ) WITH DATA PRIMARY INDEX (ALLERGEN_REF_NUM)
    ON COMMIT PRESERVE ROWS;

--DROP TABLE ALLERGY_BASE;
CREATE MULTISET VOLATILE TABLE ALLERGY_BASE
AS
    (
        SELECT
             cal.FISCAL_WEEK_START_DT AS Fill_Week
            --,drug.GCN_SEQ_NBR
            --,drug.GNN
            ,COALESCE(alrgy.ALRGY_REF_NUM, 'Unknown') AS ALRGY_REF_NUM --"Allergy Ref Number"
            ,CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'DACN:%' THEN 'DACN'
                         WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDBGN:%' THEN 'FDBGN'
                         WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDB:%' THEN 'FDB'
                         WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FIGN:%' THEN 'FIGN'
                         ELSE COALESCE(patall.ALRGY_REF_TYP, 'Unknown') 
             END AS ALRGY_REF_TYP
            ,CASE WHEN patall.ALRGY_REF_TYP = 'FDB' THEN 'Class'
                         WHEN patall.ALRGY_REF_TYP = 'FDBGN' THEN 'Drug'
                         WHEN patall.ALRGY_REF_TYP = 'FIGN' THEN 'Ingredient'
                         ELSE 'Unknown'
             END AS "Allergy Type"
            --,codes.DESCRIPTION AS "Allergy Description" --Could possibly add RESPONSE_ALLERGY's DRUG_ALRGY_DSC or ALRGY_DESC_TYPE to the Coalesce, if it turns out to be accurate
            ,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
        FROM
            ALERTS_BY_MOD AS abm
            INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RESPONSE_ALLERGY AS alrgy
                ON abm.DUR_CONFLICT_NBR = alrgy.DUR_CNFLT_NBR
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_PATIENT_ALLERGY_XREF AS patall
                ON abm.RXC_PTNT_ID = patall.RXC_PTNT_ID
                AND alrgy.ALRGY_REF_NUM = patall.ALRGY_CD
            INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                ON abm.FILL_DATE = cal.DAY_DT
            --LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
                --ON abm.DRUG_ID = drug.DRUG_ID
        WHERE
            abm.Alert_Suppressed <> 'Y'
        GROUP BY
             1
            ,2
            ,3
            ,4  
    ) WITH DATA PRIMARY INDEX (ALRGY_REF_NUM, ALRGY_REF_TYP)
    ON COMMIT PRESERVE ROWS;

DELETE RXCOE_PPA.LD_DUR_DASH_ALLERGY ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_ALLERGY
    SELECT
         alrgy.Fill_Week
        --,alrgy.GCN_SEQ_NBR
        --,alrgy.GNN
        ,alrgy.ALRGY_REF_NUM AS "Allergy Ref Number"
        ,alrgy.ALRGY_REF_TYP AS "Allergy Ref Type"
        ,CASE WHEN alrgy.ALRGY_REF_TYP = 'FDB' THEN 'Class'
                     WHEN alrgy.ALRGY_REF_TYP = 'FDBGN' THEN 'Drug'
                     WHEN alrgy.ALRGY_REF_TYP = 'FIGN' THEN 'Ingredient'
                     ELSE 'Unknown'
         END AS "Allergy Type"
        ,COALESCE(codes.DESCRIPTION, 'Unknown') AS "Allergy Description"
        ,alrgy.Alerts
    FROM
        ALLERGY_BASE AS alrgy
        LEFT OUTER JOIN ALLERGY_CODES AS codes
            ON alrgy.ALRGY_REF_NUM = codes.ALLERGEN_REF_NUM
            AND alrgy.ALRGY_REF_TYP = codes.ALLERGEN_REF_TYPE;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_ALLERGY';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_ALLERGY', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Distribution of Scripts by # of Drug-Allergy Alerts */
DELETE RXCOE_PPA.LD_RX_BY_ALRGY_ALERT_VOL ALL;
INSERT INTO RXCOE_PPA.LD_RX_BY_ALRGY_ALERT_VOL
    SELECT
         base.Fill_Week
        ,base.Alerts
        ,COUNT(DISTINCT base.PRSCRT_FILL_ID) AS Scripts
    FROM
        (
            SELECT
                 cal.FISCAL_WEEK_START_DT AS Fill_Week
                ,abm.PRSCRT_FILL_ID
                ,abm.DUR_CONFLICT_CTGY_ID
                ,COUNT(*) AS Alerts
            FROM
                ALERTS_BY_MOD AS abm
                LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                    ON abm.FILL_DATE = cal.DAY_DT
            WHERE
                    abm.DUR_CONFLICT_CTGY_ID = 1 --Drug-Allergy
                    AND abm.Alert_Suppressed <> 'Y'
            GROUP BY
                 Fill_Week
                ,abm.PRSCRT_FILL_ID
                ,abm.DUR_CONFLICT_CTGY_ID
        ) AS base
    GROUP BY
         base.Fill_Week
        ,base.Alerts;

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_RX_BY_ALRGY_ALERT_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_RX_BY_ALRGY_ALERT_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Volume of Rx with multiple types of allergy alerts (Class/Drug/Ingredient), by drug */
DELETE RXCOE_PPA.LD_DUR_RX_BY_ALRGY_TYPE ALL;
INSERT INTO RXCOE_PPA.LD_DUR_RX_BY_ALRGY_TYPE
    SELECT
        base2.*
    FROM
        (
            SELECT
                 base.Fill_Week
                ,base.GCN_SEQ_NBR
                ,base.GNN
                ,CASE WHEN base.Class_Alerts > 0 AND base.Drug_Alerts > 0 AND base.Ingredient_Alerts > 0 THEN 'Class + Drug + Ingredient'
                             WHEN base.Class_Alerts > 0 AND base.Drug_Alerts > 0 THEN 'Class + Drug'
                             WHEN base.Class_Alerts > 0 AND base.Ingredient_Alerts > 0 THEN 'Class + Ingredient'
                             WHEN base.Drug_Alerts > 0 AND base.Ingredient_Alerts > 0 THEN 'Drug + Ingredient'
                             ELSE 'Single Alert'
                 END AS "Alert Types"
                ,COUNT(DISTINCT base.PRSCRT_FILL_ID) AS Scripts
            FROM
                (
                    SELECT
                         cal.FISCAL_WEEK_START_DT AS Fill_Week
                        ,abm.PRSCRT_FILL_ID
                        ,drug.GCN_SEQ_NBR
                        ,drug.GNN
                        ,COUNT(CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDB:%' OR patall.ALRGY_REF_TYP = 'FDB' THEN abm.DUR_CONFLICT_NBR END) AS Class_Alerts
                        ,COUNT(CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDBGN:%' OR patall.ALRGY_REF_TYP = 'FDBGN' THEN abm.DUR_CONFLICT_NBR END) AS Drug_Alerts
                        ,COUNT(CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FIGN:%' OR patall.ALRGY_REF_TYP = 'FIGN' THEN abm.DUR_CONFLICT_NBR END) AS Ingredient_Alerts
                    FROM
                        ALERTS_BY_MOD AS abm
                        INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RESPONSE_ALLERGY AS alrgy
                            ON abm.DUR_CONFLICT_NBR = alrgy.DUR_CNFLT_NBR
                        LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_PATIENT_ALLERGY_XREF AS patall
                            ON abm.RXC_PTNT_ID = patall.RXC_PTNT_ID
                            AND alrgy.ALRGY_REF_NUM = patall.ALRGY_CD
                        INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
                            ON abm.FILL_DATE = cal.DAY_DT
                        LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
                            ON abm.DRUG_ID = drug.DRUG_ID
                    WHERE
                        abm.Alert_Suppressed <> 'Y'
                    GROUP BY
                         Fill_Week
                        ,abm.PRSCRT_FILL_ID
                        ,drug.GCN_SEQ_NBR
                        ,drug.GNN
                ) AS base
            GROUP BY
                 base.Fill_Week
                ,base.GCN_SEQ_NBR
                ,base.GNN
                ,"Alert Types"
        ) AS base2
    WHERE
        base2."Alert Types" <> 'Single Alert';

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_RX_BY_ALRGY_TYPE';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_RX_BY_ALRGY_TYPE', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Rx Volume of allergy combinations from different types */
--DROP TABLE MULT_ALLERGY_RX;
CREATE MULTISET VOLATILE TABLE MULT_ALLERGY_RX
AS
    (
        SELECT DISTINCT
              base.PRSCRT_FILL_ID
        FROM
            (
                SELECT DISTINCT
                     abm.PRSCRT_FILL_ID
                    ,COUNT(DISTINCT CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'DACN:%' THEN abm.DUR_CONFLICT_NBR END) AS DACN_Alerts
                    ,COUNT(DISTINCT CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDBGN:%' OR patall.ALRGY_REF_TYP = 'FDBGN' THEN abm.DUR_CONFLICT_NBR END) AS FDBGN_Alerts
                    ,COUNT(DISTINCT CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDB:%' OR patall.ALRGY_REF_TYP = 'FDB' THEN abm.DUR_CONFLICT_NBR END) AS FDB_Alerts
                    ,COUNT(DISTINCT CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FIGN:%' OR patall.ALRGY_REF_TYP = 'FIGN' THEN abm.DUR_CONFLICT_NBR END) AS FIGN_Alerts
                FROM
                    ALERTS_BY_MOD AS abm
                    INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RESPONSE_ALLERGY AS alrgy
                        ON abm.DUR_CONFLICT_NBR = alrgy.DUR_CNFLT_NBR
                    LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_PATIENT_ALLERGY_XREF AS patall
                        ON abm.RXC_PTNT_ID = patall.RXC_PTNT_ID
                        AND alrgy.ALRGY_REF_NUM = patall.ALRGY_CD
                GROUP BY
                     abm.PRSCRT_FILL_ID
            ) AS base
        WHERE
            (
                base.DACN_Alerts > 0
                AND base.FDBGN_Alerts > 0
            )
            OR
            (
                base.DACN_Alerts > 0
                AND base.FDB_Alerts > 0
            )
            OR
            (
                base.DACN_Alerts > 0
                AND base.FIGN_Alerts > 0
            )
            OR
            (
                base.FDBGN_Alerts > 0
                AND base.FDB_Alerts > 0
            )
            OR
            (
                base.FDBGN_Alerts > 0
                AND base.FIGN_Alerts > 0
            )
            OR
            (
                base.FDB_Alerts > 0
                AND base.FIGN_Alerts > 0
            )
    ) WITH DATA PRIMARY INDEX (PRSCRT_FILL_ID)
    ON COMMIT PRESERVE ROWS;
    
--DROP TABLE ALLERGY_ALERT_DATA;
CREATE MULTISET VOLATILE TABLE ALLERGY_ALERT_DATA
AS
    (
        SELECT
             rx.PRSCRT_FILL_ID
            ,abm.FILL_DATE
            ,abm.DUR_CONFLICT_NBR
            ,COALESCE(alrgy.ALRGY_REF_NUM, 'Unknown') AS ALRGY_REF_NUM --"Allergy Ref Number"
            ,CASE WHEN alrgy.ALRGY_DESC_TYPE LIKE 'DACN:%' THEN 'DACN'
                         WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDBGN:%' THEN 'FDBGN'
                         WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FDB:%' THEN 'FDB'
                         WHEN alrgy.ALRGY_DESC_TYPE LIKE 'FIGN:%' THEN 'FIGN'
                         ELSE COALESCE(patall.ALRGY_REF_TYP, 'Unknown')
             END AS ALRGY_REF_TYP
        FROM
            MULT_ALLERGY_RX AS rx
            INNER JOIN ALERTS_BY_MOD AS abm
                ON rx.PRSCRT_FILL_ID = abm.PRSCRT_FILL_ID
            INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RESPONSE_ALLERGY AS alrgy
                ON abm.DUR_CONFLICT_NBR = alrgy.DUR_CNFLT_NBR
            LEFT OUTER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_PATIENT_ALLERGY_XREF AS patall
                ON abm.RXC_PTNT_ID = patall.RXC_PTNT_ID
                AND alrgy.ALRGY_REF_NUM = patall.ALRGY_CD
    ) WITH DATA PRIMARY INDEX (PRSCRT_FILL_ID)
    ON COMMIT PRESERVE ROWS;

DELETE RXCOE_PPA.LD_DUR_ALLERGY_MULT_VOL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_ALLERGY_MULT_VOL   
    SELECT
         cal.FISCAL_WEEK_START_DT AS Fill_Week
        ,data1.ALRGY_REF_NUM AS "Allergy 1 Ref #"
        ,data1.ALRGY_REF_TYP AS "Allergy 1 Level"
        ,COALESCE(codes1.DESCRIPTION, 'Unknown') AS "Allergy 1 Description"
        ,data2.ALRGY_REF_NUM AS "Allergy 2 Ref #"
        ,data2.ALRGY_REF_TYP AS "Allergy 2 Level"
        ,COALESCE(codes2.DESCRIPTION, 'Unknown') AS "Allergy 2 Description"
        ,COUNT(DISTINCT data1.PRSCRT_FILL_ID) AS Scripts
    FROM
        ALLERGY_ALERT_DATA AS data1
        INNER JOIN ALLERGY_ALERT_DATA AS data2
            ON data1.PRSCRT_FILL_ID = data2.PRSCRT_FILL_ID
            AND data1.DUR_CONFLICT_NBR < data2.DUR_CONFLICT_NBR
            AND data1.ALRGY_REF_TYP <> data2.ALRGY_REF_TYP
            AND data2.ALRGY_REF_TYP <> 'Unknown'
        LEFT OUTER JOIN ALLERGY_CODES AS codes1
            ON data1.ALRGY_REF_NUM = codes1.ALLERGEN_REF_NUM
            AND data1.ALRGY_REF_TYP = codes1.ALLERGEN_REF_TYPE
        LEFT OUTER JOIN ALLERGY_CODES AS codes2
            ON data2.ALRGY_REF_NUM = codes2.ALLERGEN_REF_NUM
            AND data2.ALRGY_REF_TYP = codes2.ALLERGEN_REF_TYPE
        INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
            ON data1.FILL_DATE = cal.DAY_DT
    WHERE
        data1.ALRGY_REF_TYP <> 'Unknown'
    GROUP BY
         Fill_Week
        ,"Allergy 1 Ref #"
        ,"Allergy 1 Level"
        ,"Allergy 1 Description"
        ,"Allergy 2 Ref #"
        ,"Allergy 2 Level"
        ,"Allergy 2 Description";
        
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_ALLERGY_MULT_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_ALLERGY_MULT_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Opioid Risk MME data for histogram */
DELETE RXCOE_PPA.LD_DUR_DASH_MME_HIST ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_MME_HIST
	SELECT
	     cal.FISCAL_WEEK_START_DT AS Fill_Week
		,abm.Exception_Type
		,CASE WHEN mme.ATRB_VAL_2 BETWEEN 0 AND 50 THEN '0-50'
			  WHEN mme.ATRB_VAL_2 BETWEEN 50 AND 90 THEN '51-90'
			  WHEN mme.ATRB_VAL_2 BETWEEN 90 AND 200 THEN '91-200'
			  WHEN mme.ATRB_VAL_2 > 200 THEN '200+'
		 END AS "MME Group"
		,COUNT(DISTINCT abm.PRSCRT_FILL_ID) AS Scripts
	FROM
		ALERTS_BY_MOD AS abm
		INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_RX_FILL_DSPLY_ATRB AS mme
			ON abm.RXC_PRSCRT_FILL_ID = mme.RXC_PRSCRT_FILL_ID
			AND mme.DSPLY_ATRB_TYP_CD = 2
	    INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
	        ON abm.FILL_DATE = cal.DAY_DT
	WHERE
		abm.Alert_Suppressed <> 'Y'
	GROUP BY
		 Fill_Week
		,Exception_Type
		,"MME Group";

DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_MME_HIST';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_MME_HIST', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Opioid Alert Volume by Alert Type */
--DROP TABLE COCKTAIL_TYPE;
CREATE MULTISET VOLATILE TABLE COCKTAIL_TYPE
AS
	(
		SELECT DISTINCT
			 base.DUR_CONFLICT_NBR
			,CASE WHEN base.Muscle_Relaxant_Rx > 0 THEN 'Triple Threat'
				  ELSE 'Double Threat'
			 END AS Cocktail_Type
		FROM
			(
				SELECT
					 abm.DUR_CONFLICT_NBR
					,SUM(DISTINCT CASE WHEN CNCR_RISK_GRP = 4 THEN 1 ELSE 0 END) Muscle_Relaxant_Rx
				FROM
					ALERTS_BY_MOD AS abm
					INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_FACT_DUR_RSPNS_OPIOID_RISK AS pre
						ON abm.DUR_CONFLICT_NBR = pre.DUR_CNFLT_NBR
					INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS sub
						ON abm.DUR_CNFLT_SUB_TYP_ID = sub.DUR_CNFLT_SUB_TYP_ID
				WHERE
					abm.DUR_CNFLT_SUB_TYP_ID IN (1176, 1181) --Combination
					AND abm.Alert_Suppressed <> 'Y'
				GROUP BY
					abm.DUR_CONFLICT_NBR
			) AS base
	) WITH DATA PRIMARY INDEX (DUR_CONFLICT_NBR)
	ON COMMIT PRESERVE ROWS;
	
DELETE RXCOE_PPA.LD_DUR_DASH_OPIOID_VOL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_OPIOID_VOL
	SELECT
		 cal.FISCAL_WEEK_START_DT AS Fill_Week
		,abm.Exception_Type
		,CASE WHEN combo.DUR_CONFLICT_NBR IS NOT NULL THEN combo.Cocktail_Type
			  ELSE sub.DUR_CNFLT_SUB_TYP_DSC
		 END AS "Opioid Alert Type"
		,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
	FROM
		ALERTS_BY_MOD AS abm
		LEFT OUTER JOIN COCKTAIL_TYPE AS combo
			ON abm.DUR_CONFLICT_NBR = combo.DUR_CONFLICT_NBR
		INNER JOIN IDW_PROF_PRACTICE_S_BC.SEM_DIM_DUR_CNFLT_SUB_TYP AS sub
			ON abm.DUR_CNFLT_SUB_TYP_ID = sub.DUR_CNFLT_SUB_TYP_ID
		INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
		        ON abm.FILL_DATE = cal.DAY_DT
	WHERE
		abm.DUR_CONFLICT_CODE_ID = 75 --Opioid Risk
		AND abm.Alert_Suppressed <> 'Y'
	GROUP BY	
		 Fill_Week
		,Exception_Type
		,"Opioid Alert Type";
	
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_OPIOID_VOL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_OPIOID_VOL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Rx w/MME & Cocktail Alert */
DELETE RXCOE_PPA.LD_DUR_DASH_MME_AND_COCKTAIL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_MME_AND_COCKTAIL
	SELECT
		 cal.FISCAL_WEEK_START_DT AS Fill_Week
		,base.GCN_SEQ_NBR
		,base.GNN
		,Count(DISTINCT base.PRSCRT_FILL_ID) AS Scripts
	FROM
		(
			SELECT
				 abm.FILL_DATE
				,abm.PRSCRT_FILL_ID
				,drug.GCN_SEQ_NBR
				,drug.GNN
				,Count(DISTINCT CASE WHEN abm.DUR_CNFLT_SUB_TYP_ID IN (1175,1177,1182) THEN abm.DUR_CONFLICT_NBR END) AS MME_Alerts
				,Count(DISTINCT CASE WHEN abm.DUR_CNFLT_SUB_TYP_ID IN (1176,1181) THEN abm.DUR_CONFLICT_NBR END) AS Cocktail_Alerts
			FROM
				ALERTS_BY_MOD AS abm
				INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
					ON abm.DRUG_ID = drug.DRUG_ID
			WHERE
				abm.DUR_CONFLICT_CODE_ID = 75 --Opioid Risk
				AND abm.Alert_Suppressed <> 'Y'
			GROUP BY
				 abm.FILL_DATE
				,abm.PRSCRT_FILL_ID
				,drug.GCN_SEQ_NBR
				,drug.GNN
		) AS base
		INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
			ON base.FILL_DATE = cal.DAY_DT
	WHERE
		base.MME_Alerts > 0
		AND base.Cocktail_Alerts > 0
	GROUP BY
		 Fill_Week
		,base.GCN_SEQ_NBR
		,base.GNN;
	
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_MME_AND_COCKTAIL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_MME_AND_COCKTAIL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Coctail volume by drug */
DELETE RXCOE_PPA.LD_DUR_DASH_OPIOID_COMBO ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_OPIOID_COMBO
	SELECT
		 cal.FISCAL_WEEK_START_DT AS Fill_Week
		,abm.Exception_Type
		,cocktail.Cocktail_Type
		,drug.GCN_SEQ_NBR
		,drug.GNN
		,Count(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
	FROM
		ALERTS_BY_MOD AS abm
		INNER JOIN COCKTAIL_TYPE AS cocktail
			ON abm.DUR_CONFLICT_NBR = cocktail.DUR_CONFLICT_NBR
		INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
			ON abm.DRUG_ID = drug.DRUG_ID
		INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
        	ON abm.FILL_DATE = cal.DAY_DT
	WHERE
		abm.Alert_Suppressed <> 'Y'
	GROUP BY
		 Fill_Week
		,abm.Exception_Type
		,cocktail.Cocktail_Type
		,drug.GCN_SEQ_NBR
		,drug.GNN;
	
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_OPIOID_COMBO';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_OPIOID_COMBO', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Screening Failures Overview Data */
DELETE RXCOE_PPA.LD_DUR_DASH_SCRN_FAIL ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_SCRN_FAIL
	SELECT
		  cal.FISCAL_WEEK_START_DT AS Fill_Week
		 ,sft.SCRN_FAIL_TYPE AS "Screening Fail Type"
		 ,drug.GCN_SEQ_NBR
		 ,drug.GNN
		 ,Count(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
	FROM
		ALERTS_BY_MOD AS abm
		INNER JOIN RXCOE_PPA.LD_DUR_SCRN_FAIL_TYPE AS sft
			ON abm.DUR_CNFLT_SUB_TYP_ID = sft.DUR_CNFLT_SUB_TYP_ID
		INNER JOIN IDW_COMMON.SEM_DIM_ALL_DRUG AS drug
			ON abm.DRUG_ID = drug.DRUG_ID
		INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
	        ON abm.FILL_DATE = cal.DAY_DT
	WHERE
		abm.Alert_Suppressed <> 'Y'
	GROUP BY
		 cal.FISCAL_WEEK_START_DT
		,sft.SCRN_FAIL_TYPE
		,drug.GCN_SEQ_NBR
		,drug.GNN;
	
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_SCRN_FAIL';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_SCRN_FAIL', CURRENT_TIMESTAMP);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Screening Failure Alerts per Rx */
DELETE RXCOE_PPA.LD_DUR_DASH_SCRN_FAIL_PER_RX ALL;
INSERT INTO RXCOE_PPA.LD_DUR_DASH_SCRN_FAIL_PER_RX
	SELECT
		 cal.FISCAL_WEEK_START_DT AS Fill_Week
		,base.Alerts
		,Count(DISTINCT base.PRSCRT_FILL_ID) AS Scripts
	FROM
		(
			SELECT
				 fill.FILL_DATE
				,fill.PRSCRT_FILL_ID
				,COUNT(DISTINCT abm.DUR_CONFLICT_NBR) AS Alerts
			FROM
	            IDW_RX_OPERATIONS_S_BC.SEM_FACT_ALL_SCRIPT_FILL AS fill
	            INNER JOIN IDW_COMMON.SEM_DIM_ALL_STORE AS store
	                ON fill.STORE_NBR = store.STORE_NBR
	                AND store.AREA_NBR in (1,2,3,4,5,7,8,9,12) and CLOS_DT IS NULL
	            LEFT OUTER JOIN ALERTS_BY_MOD AS abm
	                ON fill.PRSCRT_FILL_ID = abm.PRSCRT_FILL_ID
	                AND abm.Alert_Suppressed <> 'Y'
					AND abm.DUR_CONFLICT_CTGY_ID BETWEEN 13 AND 14 --Screening Failures
	            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
	                ON fill.FILL_DATE = cal.DAY_DT
	            LEFT OUTER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal2
	                ON cal2.DAY_DT = CURRENT_DATE
	        WHERE
	            fill.FILL_DATE >= ADD_MONTHS(TRUNC(CURRENT_DATE, 'WW')-1, -12) --Needs to be updated every year as TRUNC 'WW' picks the week to start on the same day as Jan 1st of the year
	            AND cal.FISCAL_WEEK_START_DT < cal2.FISCAL_WEEK_START_DT
			GROUP BY
				 fill.FILL_DATE
				,fill.PRSCRT_FILL_ID
		) AS base
		INNER JOIN IDW_COMMON.SEM_DIM_ALL_FISCAL_CAL_DAY AS cal
	        ON base.FILL_DATE = cal.DAY_DT
	GROUP BY
		 Fill_Week
		,base.Alerts;
	
DELETE FROM RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG WHERE TableName = 'LD_DUR_DASH_SCRN_FAIL_PER_RX';
INSERT INTO RXCOE_PPA.LD_DUR_INTERNAL_DASH_LOG VALUES ('LD_DUR_DASH_SCRN_FAIL_PER_RX', CURRENT_TIMESTAMP);
--------------------------------------------------------------------------------------------------------------------------------------------------------------
